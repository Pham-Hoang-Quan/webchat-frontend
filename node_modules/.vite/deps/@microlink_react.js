import {
  __assign,
  __spreadArray,
  init_tslib_es6
} from "./chunk-V2E2UV4F.js";
import {
  _defineProperty,
  _extends,
  _objectWithoutProperties
} from "./chunk-XBZWSJIQ.js";
import {
  require_react
} from "./chunk-DSVVORD3.js";
import {
  __commonJS,
  __toESM
} from "./chunk-PD74YRWM.js";

// node_modules/shallowequal/index.js
var require_shallowequal = __commonJS({
  "node_modules/shallowequal/index.js"(exports, module) {
    module.exports = function shallowEqual(objA, objB, compare, compareContext) {
      var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
      if (ret !== void 0) {
        return !!ret;
      }
      if (objA === objB) {
        return true;
      }
      if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
        return false;
      }
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) {
        return false;
      }
      var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
      for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
          return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/@microlink/react/dist/microlink.mjs
var import_react2 = __toESM(require_react(), 1);

// node_modules/styled-components/dist/styled-components.browser.esm.js
init_tslib_es6();

// node_modules/@emotion/memoize/dist/emotion-memoize.esm.js
function memoize(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}

// node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = memoize(
  function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
  }
  /* Z+1 */
);

// node_modules/styled-components/dist/styled-components.browser.esm.js
var import_react = __toESM(require_react());
var import_shallowequal = __toESM(require_shallowequal());

// node_modules/styled-components/node_modules/stylis/src/Enum.js
var MS = "-ms-";
var MOZ = "-moz-";
var WEBKIT = "-webkit-";
var COMMENT = "comm";
var RULESET = "rule";
var DECLARATION = "decl";
var IMPORT = "@import";
var KEYFRAMES = "@keyframes";
var LAYER = "@layer";

// node_modules/styled-components/node_modules/stylis/src/Utility.js
var abs = Math.abs;
var from = String.fromCharCode;
var assign = Object.assign;
function hash(value, length2) {
  return charat(value, 0) ^ 45 ? (((length2 << 2 ^ charat(value, 0)) << 2 ^ charat(value, 1)) << 2 ^ charat(value, 2)) << 2 ^ charat(value, 3) : 0;
}
function trim(value) {
  return value.trim();
}
function match(value, pattern) {
  return (value = pattern.exec(value)) ? value[0] : value;
}
function replace(value, pattern, replacement) {
  return value.replace(pattern, replacement);
}
function indexof(value, search, position2) {
  return value.indexOf(search, position2);
}
function charat(value, index) {
  return value.charCodeAt(index) | 0;
}
function substr(value, begin, end) {
  return value.slice(begin, end);
}
function strlen(value) {
  return value.length;
}
function sizeof(value) {
  return value.length;
}
function append(value, array) {
  return array.push(value), value;
}
function combine(array, callback) {
  return array.map(callback).join("");
}
function filter(array, pattern) {
  return array.filter(function(value) {
    return !match(value, pattern);
  });
}

// node_modules/styled-components/node_modules/stylis/src/Tokenizer.js
var line = 1;
var column = 1;
var length = 0;
var position = 0;
var character = 0;
var characters = "";
function node(value, root, parent, type, props, children, length2, siblings) {
  return { value, root, parent, type, props, children, line, column, length: length2, return: "", siblings };
}
function copy(root, props) {
  return assign(node("", null, null, "", null, null, 0, root.siblings), root, { length: -root.length }, props);
}
function lift(root) {
  while (root.root)
    root = copy(root.root, { children: [root] });
  append(root, root.siblings);
}
function char() {
  return character;
}
function prev() {
  character = position > 0 ? charat(characters, --position) : 0;
  if (column--, character === 10)
    column = 1, line--;
  return character;
}
function next() {
  character = position < length ? charat(characters, position++) : 0;
  if (column++, character === 10)
    column = 1, line++;
  return character;
}
function peek() {
  return charat(characters, position);
}
function caret() {
  return position;
}
function slice(begin, end) {
  return substr(characters, begin, end);
}
function token(type) {
  switch (type) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function alloc(value) {
  return line = column = 1, length = strlen(characters = value), position = 0, [];
}
function dealloc(value) {
  return characters = "", value;
}
function delimit(type) {
  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));
}
function whitespace(type) {
  while (character = peek())
    if (character < 33)
      next();
    else
      break;
  return token(type) > 2 || token(character) > 3 ? "" : " ";
}
function escaping(index, count) {
  while (--count && next())
    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)
      break;
  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));
}
function delimiter(type) {
  while (next())
    switch (character) {
      case type:
        return position;
      case 34:
      case 39:
        if (type !== 34 && type !== 39)
          delimiter(character);
        break;
      case 40:
        if (type === 41)
          delimiter(type);
        break;
      case 92:
        next();
        break;
    }
  return position;
}
function commenter(type, index) {
  while (next())
    if (type + character === 47 + 10)
      break;
    else if (type + character === 42 + 42 && peek() === 47)
      break;
  return "/*" + slice(index, position - 1) + "*" + from(type === 47 ? type : next());
}
function identifier(index) {
  while (!token(peek()))
    next();
  return slice(index, position);
}

// node_modules/styled-components/node_modules/stylis/src/Parser.js
function compile(value) {
  return dealloc(parse("", null, null, null, [""], value = alloc(value), 0, [0], value));
}
function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
  var index = 0;
  var offset = 0;
  var length2 = pseudo;
  var atrule = 0;
  var property = 0;
  var previous = 0;
  var variable = 1;
  var scanning = 1;
  var ampersand = 1;
  var character2 = 0;
  var type = "";
  var props = rules;
  var children = rulesets;
  var reference = rule;
  var characters2 = type;
  while (scanning)
    switch (previous = character2, character2 = next()) {
      case 40:
        if (previous != 108 && charat(characters2, length2 - 1) == 58) {
          if (indexof(characters2 += replace(delimit(character2), "&", "&\f"), "&\f", abs(index ? points[index - 1] : 0)) != -1)
            ampersand = -1;
          break;
        }
      case 34:
      case 39:
      case 91:
        characters2 += delimit(character2);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        characters2 += whitespace(previous);
        break;
      case 92:
        characters2 += escaping(caret() - 1, 7);
        continue;
      case 47:
        switch (peek()) {
          case 42:
          case 47:
            append(comment(commenter(next(), caret()), root, parent, declarations), declarations);
            break;
          default:
            characters2 += "/";
        }
        break;
      case 123 * variable:
        points[index++] = strlen(characters2) * ampersand;
      case 125 * variable:
      case 59:
      case 0:
        switch (character2) {
          case 0:
          case 125:
            scanning = 0;
          case 59 + offset:
            if (ampersand == -1)
              characters2 = replace(characters2, /\f/g, "");
            if (property > 0 && strlen(characters2) - length2)
              append(property > 32 ? declaration(characters2 + ";", rule, parent, length2 - 1, declarations) : declaration(replace(characters2, " ", "") + ";", rule, parent, length2 - 2, declarations), declarations);
            break;
          case 59:
            characters2 += ";";
          default:
            append(reference = ruleset(characters2, root, parent, index, offset, rules, points, type, props = [], children = [], length2, rulesets), rulesets);
            if (character2 === 123)
              if (offset === 0)
                parse(characters2, root, reference, reference, props, rulesets, length2, points, children);
              else
                switch (atrule === 99 && charat(characters2, 3) === 110 ? 100 : atrule) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length2, children), children), rules, children, length2, points, rule ? props : children);
                    break;
                  default:
                    parse(characters2, reference, reference, reference, [""], children, 0, points, children);
                }
        }
        index = offset = property = 0, variable = ampersand = 1, type = characters2 = "", length2 = pseudo;
        break;
      case 58:
        length2 = 1 + strlen(characters2), property = previous;
      default:
        if (variable < 1) {
          if (character2 == 123)
            --variable;
          else if (character2 == 125 && variable++ == 0 && prev() == 125)
            continue;
        }
        switch (characters2 += from(character2), character2 * variable) {
          case 38:
            ampersand = offset > 0 ? 1 : (characters2 += "\f", -1);
            break;
          case 44:
            points[index++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;
            break;
          case 64:
            if (peek() === 45)
              characters2 += delimit(next());
            atrule = peek(), offset = length2 = strlen(type = characters2 += identifier(caret())), character2++;
            break;
          case 45:
            if (previous === 45 && strlen(characters2) == 2)
              variable = 0;
        }
    }
  return rulesets;
}
function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length2, siblings) {
  var post = offset - 1;
  var rule = offset === 0 ? rules : [""];
  var size = sizeof(rule);
  for (var i3 = 0, j3 = 0, k3 = 0; i3 < index; ++i3)
    for (var x3 = 0, y3 = substr(value, post + 1, post = abs(j3 = points[i3])), z2 = value; x3 < size; ++x3)
      if (z2 = trim(j3 > 0 ? rule[x3] + " " + y3 : replace(y3, /&\f/g, rule[x3])))
        props[k3++] = z2;
  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length2, siblings);
}
function comment(value, root, parent, siblings) {
  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings);
}
function declaration(value, root, parent, length2, siblings) {
  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2, siblings);
}

// node_modules/styled-components/node_modules/stylis/src/Prefixer.js
function prefix(value, length2, children) {
  switch (hash(value, length2)) {
    case 5103:
      return WEBKIT + "print-" + value + value;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return WEBKIT + value + value;
    case 4789:
      return MOZ + value + value;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return WEBKIT + value + MOZ + value + MS + value + value;
    case 5936:
      switch (charat(value, length2 + 11)) {
        case 114:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb") + value;
        case 108:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "tb-rl") + value;
        case 45:
          return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, "lr") + value;
      }
    case 6828:
    case 4268:
    case 2903:
      return WEBKIT + value + MS + value + value;
    case 6165:
      return WEBKIT + value + MS + "flex-" + value + value;
    case 5187:
      return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + "box-$1$2" + MS + "flex-$1$2") + value;
    case 5443:
      return WEBKIT + value + MS + "flex-item-" + replace(value, /flex-|-self/g, "") + (!match(value, /flex-|baseline/) ? MS + "grid-row-" + replace(value, /flex-|-self/g, "") : "") + value;
    case 4675:
      return WEBKIT + value + MS + "flex-line-pack" + replace(value, /align-content|flex-|-self/g, "") + value;
    case 5548:
      return WEBKIT + value + MS + replace(value, "shrink", "negative") + value;
    case 5292:
      return WEBKIT + value + MS + replace(value, "basis", "preferred-size") + value;
    case 6060:
      return WEBKIT + "box-" + replace(value, "-grow", "") + WEBKIT + value + MS + replace(value, "grow", "positive") + value;
    case 4554:
      return WEBKIT + replace(value, /([^-])(transform)/g, "$1" + WEBKIT + "$2") + value;
    case 6187:
      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + "$1"), /(image-set)/, WEBKIT + "$1"), value, "") + value;
    case 5495:
    case 3959:
      return replace(value, /(image-set\([^]*)/, WEBKIT + "$1$`$1");
    case 4968:
      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + "box-pack:$3" + MS + "flex-pack:$3"), /s.+-b[^;]+/, "justify") + WEBKIT + value + value;
    case 4200:
      if (!match(value, /flex-|baseline/))
        return MS + "grid-column-align" + substr(value, length2) + value;
      break;
    case 2592:
    case 3360:
      return MS + replace(value, "template-", "") + value;
    case 4384:
    case 3616:
      if (children && children.some(function(element, index) {
        return length2 = index, match(element.props, /grid-\w+-end/);
      })) {
        return ~indexof(value + (children = children[length2].value), "span", 0) ? value : MS + replace(value, "-start", "") + value + MS + "grid-row-span:" + (~indexof(children, "span", 0) ? match(children, /\d+/) : +match(children, /\d+/) - +match(value, /\d+/)) + ";";
      }
      return MS + replace(value, "-start", "") + value;
    case 4896:
    case 4128:
      return children && children.some(function(element) {
        return match(element.props, /grid-\w+-start/);
      }) ? value : MS + replace(replace(value, "-end", "-span"), "span ", "") + value;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return replace(value, /(.+)-inline(.+)/, WEBKIT + "$1$2") + value;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (strlen(value) - 1 - length2 > 6)
        switch (charat(value, length2 + 1)) {
          case 109:
            if (charat(value, length2 + 4) !== 45)
              break;
          case 102:
            return replace(value, /(.+:)(.+)-([^]+)/, "$1" + WEBKIT + "$2-$3$1" + MOZ + (charat(value, length2 + 3) == 108 ? "$3" : "$2-$3")) + value;
          case 115:
            return ~indexof(value, "stretch", 0) ? prefix(replace(value, "stretch", "fill-available"), length2, children) + value : value;
        }
      break;
    case 5152:
    case 5920:
      return replace(value, /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/, function(_3, a3, b2, c3, d2, e2, f3) {
        return MS + a3 + ":" + b2 + f3 + (c3 ? MS + a3 + "-span:" + (d2 ? e2 : +e2 - +b2) + f3 : "") + value;
      });
    case 4949:
      if (charat(value, length2 + 6) === 121)
        return replace(value, ":", ":" + WEBKIT) + value;
      break;
    case 6444:
      switch (charat(value, charat(value, 14) === 45 ? 18 : 11)) {
        case 120:
          return replace(value, /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/, "$1" + WEBKIT + (charat(value, 14) === 45 ? "inline-" : "") + "box$3$1" + WEBKIT + "$2$3$1" + MS + "$2box$3") + value;
        case 100:
          return replace(value, ":", ":" + MS) + value;
      }
      break;
    case 5719:
    case 2647:
    case 2135:
    case 3927:
    case 2391:
      return replace(value, "scroll-", "scroll-snap-") + value;
  }
  return value;
}

// node_modules/styled-components/node_modules/stylis/src/Serializer.js
function serialize(children, callback) {
  var output = "";
  for (var i3 = 0; i3 < children.length; i3++)
    output += callback(children[i3], i3, children, callback) || "";
  return output;
}
function stringify(element, index, children, callback) {
  switch (element.type) {
    case LAYER:
      if (element.children.length)
        break;
    case IMPORT:
    case DECLARATION:
      return element.return = element.return || element.value;
    case COMMENT:
      return "";
    case KEYFRAMES:
      return element.return = element.value + "{" + serialize(element.children, callback) + "}";
    case RULESET:
      if (!strlen(element.value = element.props.join(",")))
        return "";
  }
  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + "{" + children + "}" : "";
}

// node_modules/styled-components/node_modules/stylis/src/Middleware.js
function middleware(collection) {
  var length2 = sizeof(collection);
  return function(element, index, children, callback) {
    var output = "";
    for (var i3 = 0; i3 < length2; i3++)
      output += collection[i3](element, index, children, callback) || "";
    return output;
  };
}
function rulesheet(callback) {
  return function(element) {
    if (!element.root) {
      if (element = element.return)
        callback(element);
    }
  };
}
function prefixer(element, index, children, callback) {
  if (element.length > -1) {
    if (!element.return)
      switch (element.type) {
        case DECLARATION:
          element.return = prefix(element.value, element.length, children);
          return;
        case KEYFRAMES:
          return serialize([copy(element, { value: replace(element.value, "@", "@" + WEBKIT) })], callback);
        case RULESET:
          if (element.length)
            return combine(children = element.props, function(value) {
              switch (match(value, callback = /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  lift(copy(element, { props: [replace(value, /:(read-\w+)/, ":" + MOZ + "$1")] }));
                  lift(copy(element, { props: [value] }));
                  assign(element, { props: filter(children, callback) });
                  break;
                case "::placeholder":
                  lift(copy(element, { props: [replace(value, /:(plac\w+)/, ":" + WEBKIT + "input-$1")] }));
                  lift(copy(element, { props: [replace(value, /:(plac\w+)/, ":" + MOZ + "$1")] }));
                  lift(copy(element, { props: [replace(value, /:(plac\w+)/, MS + "input-$1")] }));
                  lift(copy(element, { props: [value] }));
                  assign(element, { props: filter(children, callback) });
                  break;
              }
              return "";
            });
      }
  }
}

// node_modules/@emotion/unitless/dist/emotion-unitless.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  aspectRatio: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

// node_modules/styled-components/dist/styled-components.browser.esm.js
var f = "undefined" != typeof process && void 0 !== process.env && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR) || "data-styled";
var m = "active";
var y = "data-styled-version";
var v = "6.1.11";
var g = "/*!sc*/\n";
var S = "undefined" != typeof window && "HTMLElement" in window;
var w = Boolean("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== process.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY : "undefined" != typeof process && void 0 !== process.env && void 0 !== process.env.SC_DISABLE_SPEEDY && "" !== process.env.SC_DISABLE_SPEEDY ? "false" !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY : true);
var E = /invalid hook call/i;
var N = /* @__PURE__ */ new Set();
var P = function(t2, n2) {
  if (true) {
    var o3 = n2 ? ' with the id of "'.concat(n2, '"') : "", s3 = "The component ".concat(t2).concat(o3, " has been created dynamically.\n") + "You may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.", i3 = console.error;
    try {
      var a3 = true;
      console.error = function(t3) {
        for (var n3 = [], o4 = 1; o4 < arguments.length; o4++)
          n3[o4 - 1] = arguments[o4];
        E.test(t3) ? (a3 = false, N.delete(s3)) : i3.apply(void 0, __spreadArray([t3], n3, false));
      }, (0, import_react.useRef)(), a3 && !N.has(s3) && (console.warn(s3), N.add(s3));
    } catch (e2) {
      E.test(e2.message) && N.delete(s3);
    } finally {
      console.error = i3;
    }
  }
};
var _ = Object.freeze([]);
var C = Object.freeze({});
function I(e2, t2, n2) {
  return void 0 === n2 && (n2 = C), e2.theme !== n2.theme && e2.theme || t2 || n2.theme;
}
var A = /* @__PURE__ */ new Set(["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "u", "ul", "use", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"]);
var O = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g;
var D = /(^-|-$)/g;
function R(e2) {
  return e2.replace(O, "-").replace(D, "");
}
var T = /(a)(d)/gi;
var k = 52;
var j = function(e2) {
  return String.fromCharCode(e2 + (e2 > 25 ? 39 : 97));
};
function x(e2) {
  var t2, n2 = "";
  for (t2 = Math.abs(e2); t2 > k; t2 = t2 / k | 0)
    n2 = j(t2 % k) + n2;
  return (j(t2 % k) + n2).replace(T, "$1-$2");
}
var V;
var F = 5381;
var M = function(e2, t2) {
  for (var n2 = t2.length; n2; )
    e2 = 33 * e2 ^ t2.charCodeAt(--n2);
  return e2;
};
var $ = function(e2) {
  return M(F, e2);
};
function z(e2) {
  return x($(e2) >>> 0);
}
function B(e2) {
  return "string" == typeof e2 && e2 || e2.displayName || e2.name || "Component";
}
function L(e2) {
  return "string" == typeof e2 && e2.charAt(0) === e2.charAt(0).toLowerCase();
}
var G = "function" == typeof Symbol && Symbol.for;
var Y = G ? Symbol.for("react.memo") : 60115;
var W = G ? Symbol.for("react.forward_ref") : 60112;
var q = { childContextTypes: true, contextType: true, contextTypes: true, defaultProps: true, displayName: true, getDefaultProps: true, getDerivedStateFromError: true, getDerivedStateFromProps: true, mixins: true, propTypes: true, type: true };
var H = { name: true, length: true, prototype: true, caller: true, callee: true, arguments: true, arity: true };
var U = { $$typeof: true, compare: true, defaultProps: true, displayName: true, propTypes: true, type: true };
var J = ((V = {})[W] = { $$typeof: true, render: true, defaultProps: true, displayName: true, propTypes: true }, V[Y] = U, V);
function X(e2) {
  return ("type" in (t2 = e2) && t2.type.$$typeof) === Y ? U : "$$typeof" in e2 ? J[e2.$$typeof] : q;
  var t2;
}
var Z = Object.defineProperty;
var K = Object.getOwnPropertyNames;
var Q = Object.getOwnPropertySymbols;
var ee = Object.getOwnPropertyDescriptor;
var te = Object.getPrototypeOf;
var ne = Object.prototype;
function oe(e2, t2, n2) {
  if ("string" != typeof t2) {
    if (ne) {
      var o3 = te(t2);
      o3 && o3 !== ne && oe(e2, o3, n2);
    }
    var r3 = K(t2);
    Q && (r3 = r3.concat(Q(t2)));
    for (var s3 = X(e2), i3 = X(t2), a3 = 0; a3 < r3.length; ++a3) {
      var c3 = r3[a3];
      if (!(c3 in H || n2 && n2[c3] || i3 && c3 in i3 || s3 && c3 in s3)) {
        var l4 = ee(t2, c3);
        try {
          Z(e2, c3, l4);
        } catch (e3) {
        }
      }
    }
  }
  return e2;
}
function re(e2) {
  return "function" == typeof e2;
}
function se(e2) {
  return "object" == typeof e2 && "styledComponentId" in e2;
}
function ie(e2, t2) {
  return e2 && t2 ? "".concat(e2, " ").concat(t2) : e2 || t2 || "";
}
function ae(e2, t2) {
  if (0 === e2.length)
    return "";
  for (var n2 = e2[0], o3 = 1; o3 < e2.length; o3++)
    n2 += t2 ? t2 + e2[o3] : e2[o3];
  return n2;
}
function ce(e2) {
  return null !== e2 && "object" == typeof e2 && e2.constructor.name === Object.name && !("props" in e2 && e2.$$typeof);
}
function le(e2, t2, n2) {
  if (void 0 === n2 && (n2 = false), !n2 && !ce(e2) && !Array.isArray(e2))
    return t2;
  if (Array.isArray(t2))
    for (var o3 = 0; o3 < t2.length; o3++)
      e2[o3] = le(e2[o3], t2[o3]);
  else if (ce(t2))
    for (var o3 in t2)
      e2[o3] = le(e2[o3], t2[o3]);
  return e2;
}
function ue(e2, t2) {
  Object.defineProperty(e2, "toString", { value: t2 });
}
var pe = true ? { 1: "Cannot create styled-component for component: %s.\n\n", 2: "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n", 3: "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n", 4: "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n", 5: "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n", 6: "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n", 7: 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n', 8: 'ThemeProvider: Please make your "theme" prop an object.\n\n', 9: "Missing document `<head>`\n\n", 10: "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n", 11: "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n", 12: "It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n", 13: "%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n", 14: 'ThemeProvider: "theme" prop is required.\n\n', 15: "A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n", 16: "Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n", 17: "CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n", 18: "ThemeProvider: Please make sure your useTheme hook is within a `<ThemeProvider>`" } : {};
function de() {
  for (var e2 = [], t2 = 0; t2 < arguments.length; t2++)
    e2[t2] = arguments[t2];
  for (var n2 = e2[0], o3 = [], r3 = 1, s3 = e2.length; r3 < s3; r3 += 1)
    o3.push(e2[r3]);
  return o3.forEach(function(e3) {
    n2 = n2.replace(/%[a-z]/, e3);
  }), n2;
}
function he(t2) {
  for (var n2 = [], o3 = 1; o3 < arguments.length; o3++)
    n2[o3 - 1] = arguments[o3];
  return false ? new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(t2, " for more information.").concat(n2.length > 0 ? " Args: ".concat(n2.join(", ")) : "")) : new Error(de.apply(void 0, __spreadArray([pe[t2]], n2, false)).trim());
}
var fe = function() {
  function e2(e3) {
    this.groupSizes = new Uint32Array(512), this.length = 512, this.tag = e3;
  }
  return e2.prototype.indexOfGroup = function(e3) {
    for (var t2 = 0, n2 = 0; n2 < e3; n2++)
      t2 += this.groupSizes[n2];
    return t2;
  }, e2.prototype.insertRules = function(e3, t2) {
    if (e3 >= this.groupSizes.length) {
      for (var n2 = this.groupSizes, o3 = n2.length, r3 = o3; e3 >= r3; )
        if ((r3 <<= 1) < 0)
          throw he(16, "".concat(e3));
      this.groupSizes = new Uint32Array(r3), this.groupSizes.set(n2), this.length = r3;
      for (var s3 = o3; s3 < r3; s3++)
        this.groupSizes[s3] = 0;
    }
    for (var i3 = this.indexOfGroup(e3 + 1), a3 = (s3 = 0, t2.length); s3 < a3; s3++)
      this.tag.insertRule(i3, t2[s3]) && (this.groupSizes[e3]++, i3++);
  }, e2.prototype.clearGroup = function(e3) {
    if (e3 < this.length) {
      var t2 = this.groupSizes[e3], n2 = this.indexOfGroup(e3), o3 = n2 + t2;
      this.groupSizes[e3] = 0;
      for (var r3 = n2; r3 < o3; r3++)
        this.tag.deleteRule(n2);
    }
  }, e2.prototype.getGroup = function(e3) {
    var t2 = "";
    if (e3 >= this.length || 0 === this.groupSizes[e3])
      return t2;
    for (var n2 = this.groupSizes[e3], o3 = this.indexOfGroup(e3), r3 = o3 + n2, s3 = o3; s3 < r3; s3++)
      t2 += "".concat(this.tag.getRule(s3)).concat(g);
    return t2;
  }, e2;
}();
var me = 1 << 30;
var ye = /* @__PURE__ */ new Map();
var ve = /* @__PURE__ */ new Map();
var ge = 1;
var Se = function(e2) {
  if (ye.has(e2))
    return ye.get(e2);
  for (; ve.has(ge); )
    ge++;
  var t2 = ge++;
  if ((0 | t2) < 0 || t2 > me)
    throw he(16, "".concat(t2));
  return ye.set(e2, t2), ve.set(t2, e2), t2;
};
var we = function(e2, t2) {
  ge = t2 + 1, ye.set(e2, t2), ve.set(t2, e2);
};
var be = "style[".concat(f, "][").concat(y, '="').concat(v, '"]');
var Ee = new RegExp("^".concat(f, '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'));
var Ne = function(e2, t2, n2) {
  for (var o3, r3 = n2.split(","), s3 = 0, i3 = r3.length; s3 < i3; s3++)
    (o3 = r3[s3]) && e2.registerName(t2, o3);
};
var Pe = function(e2, t2) {
  for (var n2, o3 = (null !== (n2 = t2.textContent) && void 0 !== n2 ? n2 : "").split(g), r3 = [], s3 = 0, i3 = o3.length; s3 < i3; s3++) {
    var a3 = o3[s3].trim();
    if (a3) {
      var c3 = a3.match(Ee);
      if (c3) {
        var l4 = 0 | parseInt(c3[1], 10), u3 = c3[2];
        0 !== l4 && (we(u3, l4), Ne(e2, u3, c3[3]), e2.getTag().insertRules(l4, r3)), r3.length = 0;
      } else
        r3.push(a3);
    }
  }
};
function _e() {
  return "undefined" != typeof __webpack_nonce__ ? __webpack_nonce__ : null;
}
var Ce = function(e2) {
  var t2 = document.head, n2 = e2 || t2, o3 = document.createElement("style"), r3 = function(e3) {
    var t3 = Array.from(e3.querySelectorAll("style[".concat(f, "]")));
    return t3[t3.length - 1];
  }(n2), s3 = void 0 !== r3 ? r3.nextSibling : null;
  o3.setAttribute(f, m), o3.setAttribute(y, v);
  var i3 = _e();
  return i3 && o3.setAttribute("nonce", i3), n2.insertBefore(o3, s3), o3;
};
var Ie = function() {
  function e2(e3) {
    this.element = Ce(e3), this.element.appendChild(document.createTextNode("")), this.sheet = function(e4) {
      if (e4.sheet)
        return e4.sheet;
      for (var t2 = document.styleSheets, n2 = 0, o3 = t2.length; n2 < o3; n2++) {
        var r3 = t2[n2];
        if (r3.ownerNode === e4)
          return r3;
      }
      throw he(17);
    }(this.element), this.length = 0;
  }
  return e2.prototype.insertRule = function(e3, t2) {
    try {
      return this.sheet.insertRule(t2, e3), this.length++, true;
    } catch (e4) {
      return false;
    }
  }, e2.prototype.deleteRule = function(e3) {
    this.sheet.deleteRule(e3), this.length--;
  }, e2.prototype.getRule = function(e3) {
    var t2 = this.sheet.cssRules[e3];
    return t2 && t2.cssText ? t2.cssText : "";
  }, e2;
}();
var Ae = function() {
  function e2(e3) {
    this.element = Ce(e3), this.nodes = this.element.childNodes, this.length = 0;
  }
  return e2.prototype.insertRule = function(e3, t2) {
    if (e3 <= this.length && e3 >= 0) {
      var n2 = document.createTextNode(t2);
      return this.element.insertBefore(n2, this.nodes[e3] || null), this.length++, true;
    }
    return false;
  }, e2.prototype.deleteRule = function(e3) {
    this.element.removeChild(this.nodes[e3]), this.length--;
  }, e2.prototype.getRule = function(e3) {
    return e3 < this.length ? this.nodes[e3].textContent : "";
  }, e2;
}();
var Oe = function() {
  function e2(e3) {
    this.rules = [], this.length = 0;
  }
  return e2.prototype.insertRule = function(e3, t2) {
    return e3 <= this.length && (this.rules.splice(e3, 0, t2), this.length++, true);
  }, e2.prototype.deleteRule = function(e3) {
    this.rules.splice(e3, 1), this.length--;
  }, e2.prototype.getRule = function(e3) {
    return e3 < this.length ? this.rules[e3] : "";
  }, e2;
}();
var De = S;
var Re = { isServer: !S, useCSSOMInjection: !w };
var Te = function() {
  function e2(e3, n2, o3) {
    void 0 === e3 && (e3 = C), void 0 === n2 && (n2 = {});
    var r3 = this;
    this.options = __assign(__assign({}, Re), e3), this.gs = n2, this.names = new Map(o3), this.server = !!e3.isServer, !this.server && S && De && (De = false, function(e4) {
      for (var t2 = document.querySelectorAll(be), n3 = 0, o4 = t2.length; n3 < o4; n3++) {
        var r4 = t2[n3];
        r4 && r4.getAttribute(f) !== m && (Pe(e4, r4), r4.parentNode && r4.parentNode.removeChild(r4));
      }
    }(this)), ue(this, function() {
      return function(e4) {
        for (var t2 = e4.getTag(), n3 = t2.length, o4 = "", r4 = function(n4) {
          var r5 = function(e5) {
            return ve.get(e5);
          }(n4);
          if (void 0 === r5)
            return "continue";
          var s4 = e4.names.get(r5), i3 = t2.getGroup(n4);
          if (void 0 === s4 || 0 === i3.length)
            return "continue";
          var a3 = "".concat(f, ".g").concat(n4, '[id="').concat(r5, '"]'), c3 = "";
          void 0 !== s4 && s4.forEach(function(e5) {
            e5.length > 0 && (c3 += "".concat(e5, ","));
          }), o4 += "".concat(i3).concat(a3, '{content:"').concat(c3, '"}').concat(g);
        }, s3 = 0; s3 < n3; s3++)
          r4(s3);
        return o4;
      }(r3);
    });
  }
  return e2.registerId = function(e3) {
    return Se(e3);
  }, e2.prototype.reconstructWithOptions = function(n2, o3) {
    return void 0 === o3 && (o3 = true), new e2(__assign(__assign({}, this.options), n2), this.gs, o3 && this.names || void 0);
  }, e2.prototype.allocateGSInstance = function(e3) {
    return this.gs[e3] = (this.gs[e3] || 0) + 1;
  }, e2.prototype.getTag = function() {
    return this.tag || (this.tag = (e3 = function(e4) {
      var t2 = e4.useCSSOMInjection, n2 = e4.target;
      return e4.isServer ? new Oe(n2) : t2 ? new Ie(n2) : new Ae(n2);
    }(this.options), new fe(e3)));
    var e3;
  }, e2.prototype.hasNameForId = function(e3, t2) {
    return this.names.has(e3) && this.names.get(e3).has(t2);
  }, e2.prototype.registerName = function(e3, t2) {
    if (Se(e3), this.names.has(e3))
      this.names.get(e3).add(t2);
    else {
      var n2 = /* @__PURE__ */ new Set();
      n2.add(t2), this.names.set(e3, n2);
    }
  }, e2.prototype.insertRules = function(e3, t2, n2) {
    this.registerName(e3, t2), this.getTag().insertRules(Se(e3), n2);
  }, e2.prototype.clearNames = function(e3) {
    this.names.has(e3) && this.names.get(e3).clear();
  }, e2.prototype.clearRules = function(e3) {
    this.getTag().clearGroup(Se(e3)), this.clearNames(e3);
  }, e2.prototype.clearTag = function() {
    this.tag = void 0;
  }, e2;
}();
var ke = /&/g;
var je = /^\s*\/\/.*$/gm;
function xe(e2, t2) {
  return e2.map(function(e3) {
    return "rule" === e3.type && (e3.value = "".concat(t2, " ").concat(e3.value), e3.value = e3.value.replaceAll(",", ",".concat(t2, " ")), e3.props = e3.props.map(function(e4) {
      return "".concat(t2, " ").concat(e4);
    })), Array.isArray(e3.children) && "@keyframes" !== e3.type && (e3.children = xe(e3.children, t2)), e3;
  });
}
function Ve(e2) {
  var t2, n2, o3, r3 = void 0 === e2 ? C : e2, s3 = r3.options, i3 = void 0 === s3 ? C : s3, a3 = r3.plugins, c3 = void 0 === a3 ? _ : a3, l4 = function(e3, o4, r4) {
    return r4.startsWith(n2) && r4.endsWith(n2) && r4.replaceAll(n2, "").length > 0 ? ".".concat(t2) : e3;
  }, u3 = c3.slice();
  u3.push(function(e3) {
    e3.type === RULESET && e3.value.includes("&") && (e3.props[0] = e3.props[0].replace(ke, n2).replace(o3, l4));
  }), i3.prefix && u3.push(prefixer), u3.push(stringify);
  var p3 = function(e3, r4, s4, a4) {
    void 0 === r4 && (r4 = ""), void 0 === s4 && (s4 = ""), void 0 === a4 && (a4 = "&"), t2 = a4, n2 = r4, o3 = new RegExp("\\".concat(n2, "\\b"), "g");
    var c4 = e3.replace(je, ""), l5 = compile(s4 || r4 ? "".concat(s4, " ").concat(r4, " { ").concat(c4, " }") : c4);
    i3.namespace && (l5 = xe(l5, i3.namespace));
    var p4 = [];
    return serialize(l5, middleware(u3.concat(rulesheet(function(e4) {
      return p4.push(e4);
    })))), p4;
  };
  return p3.hash = c3.length ? c3.reduce(function(e3, t3) {
    return t3.name || he(15), M(e3, t3.name);
  }, F).toString() : "", p3;
}
var Fe = new Te();
var Me = Ve();
var $e = import_react.default.createContext({ shouldForwardProp: void 0, styleSheet: Fe, stylis: Me });
var ze = $e.Consumer;
var Be = import_react.default.createContext(void 0);
function Le() {
  return (0, import_react.useContext)($e);
}
function Ge(e2) {
  var t2 = (0, import_react.useState)(e2.stylisPlugins), n2 = t2[0], r3 = t2[1], c3 = Le().styleSheet, l4 = (0, import_react.useMemo)(function() {
    var t3 = c3;
    return e2.sheet ? t3 = e2.sheet : e2.target && (t3 = t3.reconstructWithOptions({ target: e2.target }, false)), e2.disableCSSOMInjection && (t3 = t3.reconstructWithOptions({ useCSSOMInjection: false })), t3;
  }, [e2.disableCSSOMInjection, e2.sheet, e2.target, c3]), u3 = (0, import_react.useMemo)(function() {
    return Ve({ options: { namespace: e2.namespace, prefix: e2.enableVendorPrefixes }, plugins: n2 });
  }, [e2.enableVendorPrefixes, e2.namespace, n2]);
  (0, import_react.useEffect)(function() {
    (0, import_shallowequal.default)(n2, e2.stylisPlugins) || r3(e2.stylisPlugins);
  }, [e2.stylisPlugins]);
  var d2 = (0, import_react.useMemo)(function() {
    return { shouldForwardProp: e2.shouldForwardProp, styleSheet: l4, stylis: u3 };
  }, [e2.shouldForwardProp, l4, u3]);
  return import_react.default.createElement($e.Provider, { value: d2 }, import_react.default.createElement(Be.Provider, { value: u3 }, e2.children));
}
var Ye = function() {
  function e2(e3, t2) {
    var n2 = this;
    this.inject = function(e4, t3) {
      void 0 === t3 && (t3 = Me);
      var o3 = n2.name + t3.hash;
      e4.hasNameForId(n2.id, o3) || e4.insertRules(n2.id, o3, t3(n2.rules, o3, "@keyframes"));
    }, this.name = e3, this.id = "sc-keyframes-".concat(e3), this.rules = t2, ue(this, function() {
      throw he(12, String(n2.name));
    });
  }
  return e2.prototype.getName = function(e3) {
    return void 0 === e3 && (e3 = Me), this.name + e3.hash;
  }, e2;
}();
var We = function(e2) {
  return e2 >= "A" && e2 <= "Z";
};
function qe(e2) {
  for (var t2 = "", n2 = 0; n2 < e2.length; n2++) {
    var o3 = e2[n2];
    if (1 === n2 && "-" === o3 && "-" === e2[0])
      return e2;
    We(o3) ? t2 += "-" + o3.toLowerCase() : t2 += o3;
  }
  return t2.startsWith("ms-") ? "-" + t2 : t2;
}
var He = function(e2) {
  return null == e2 || false === e2 || "" === e2;
};
var Ue = function(t2) {
  var n2, o3, r3 = [];
  for (var s3 in t2) {
    var i3 = t2[s3];
    t2.hasOwnProperty(s3) && !He(i3) && (Array.isArray(i3) && i3.isCss || re(i3) ? r3.push("".concat(qe(s3), ":"), i3, ";") : ce(i3) ? r3.push.apply(r3, __spreadArray(__spreadArray(["".concat(s3, " {")], Ue(i3), false), ["}"], false)) : r3.push("".concat(qe(s3), ": ").concat((n2 = s3, null == (o3 = i3) || "boolean" == typeof o3 || "" === o3 ? "" : "number" != typeof o3 || 0 === o3 || n2 in unitlessKeys || n2.startsWith("--") ? String(o3).trim() : "".concat(o3, "px")), ";")));
  }
  return r3;
};
function Je(e2, t2, n2, o3) {
  if (He(e2))
    return [];
  if (se(e2))
    return [".".concat(e2.styledComponentId)];
  if (re(e2)) {
    if (!re(s3 = e2) || s3.prototype && s3.prototype.isReactComponent || !t2)
      return [e2];
    var r3 = e2(t2);
    return "object" != typeof r3 || Array.isArray(r3) || r3 instanceof Ye || ce(r3) || null === r3 || console.error("".concat(B(e2), " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.")), Je(r3, t2, n2, o3);
  }
  var s3;
  return e2 instanceof Ye ? n2 ? (e2.inject(n2, o3), [e2.getName(o3)]) : [e2] : ce(e2) ? Ue(e2) : Array.isArray(e2) ? Array.prototype.concat.apply(_, e2.map(function(e3) {
    return Je(e3, t2, n2, o3);
  })) : [e2.toString()];
}
function Xe(e2) {
  for (var t2 = 0; t2 < e2.length; t2 += 1) {
    var n2 = e2[t2];
    if (re(n2) && !se(n2))
      return false;
  }
  return true;
}
var Ze = $(v);
var Ke = function() {
  function e2(e3, t2, n2) {
    this.rules = e3, this.staticRulesId = "", this.isStatic = false, this.componentId = t2, this.baseHash = M(Ze, t2), this.baseStyle = n2, Te.registerId(t2);
  }
  return e2.prototype.generateAndInjectStyles = function(e3, t2, n2) {
    var o3 = this.baseStyle ? this.baseStyle.generateAndInjectStyles(e3, t2, n2) : "";
    if (this.isStatic && !n2.hash)
      if (this.staticRulesId && t2.hasNameForId(this.componentId, this.staticRulesId))
        o3 = ie(o3, this.staticRulesId);
      else {
        var r3 = ae(Je(this.rules, e3, t2, n2)), s3 = x(M(this.baseHash, r3) >>> 0);
        if (!t2.hasNameForId(this.componentId, s3)) {
          var i3 = n2(r3, ".".concat(s3), void 0, this.componentId);
          t2.insertRules(this.componentId, s3, i3);
        }
        o3 = ie(o3, s3), this.staticRulesId = s3;
      }
    else {
      for (var a3 = M(this.baseHash, n2.hash), c3 = "", l4 = 0; l4 < this.rules.length; l4++) {
        var u3 = this.rules[l4];
        if ("string" == typeof u3)
          c3 += u3, a3 = M(a3, u3);
        else if (u3) {
          var p3 = ae(Je(u3, e3, t2, n2));
          a3 = M(a3, p3 + l4), c3 += p3;
        }
      }
      if (c3) {
        var d2 = x(a3 >>> 0);
        t2.hasNameForId(this.componentId, d2) || t2.insertRules(this.componentId, d2, n2(c3, ".".concat(d2), void 0, this.componentId)), o3 = ie(o3, d2);
      }
    }
    return o3;
  }, e2;
}();
var Qe = import_react.default.createContext(void 0);
var et = Qe.Consumer;
var ot = {};
var rt = /* @__PURE__ */ new Set();
function st(e2, r3, s3) {
  var i3 = se(e2), a3 = e2, c3 = !L(e2), p3 = r3.attrs, d2 = void 0 === p3 ? _ : p3, h2 = r3.componentId, f3 = void 0 === h2 ? function(e3, t2) {
    var n2 = "string" != typeof e3 ? "sc" : R(e3);
    ot[n2] = (ot[n2] || 0) + 1;
    var o3 = "".concat(n2, "-").concat(z(v + n2 + ot[n2]));
    return t2 ? "".concat(t2, "-").concat(o3) : o3;
  }(r3.displayName, r3.parentComponentId) : h2, m3 = r3.displayName, y3 = void 0 === m3 ? function(e3) {
    return L(e3) ? "styled.".concat(e3) : "Styled(".concat(B(e3), ")");
  }(e2) : m3, g3 = r3.displayName && r3.componentId ? "".concat(R(r3.displayName), "-").concat(r3.componentId) : r3.componentId || f3, S3 = i3 && a3.attrs ? a3.attrs.concat(d2).filter(Boolean) : d2, w3 = r3.shouldForwardProp;
  if (i3 && a3.shouldForwardProp) {
    var b2 = a3.shouldForwardProp;
    if (r3.shouldForwardProp) {
      var E3 = r3.shouldForwardProp;
      w3 = function(e3, t2) {
        return b2(e3, t2) && E3(e3, t2);
      };
    } else
      w3 = b2;
  }
  var N3 = new Ke(s3, g3, i3 ? a3.componentStyle : void 0);
  function O3(e3, r4) {
    return function(e4, r5, s4) {
      var i4 = e4.attrs, a4 = e4.componentStyle, c4 = e4.defaultProps, p4 = e4.foldedComponentIds, d3 = e4.styledComponentId, h3 = e4.target, f4 = import_react.default.useContext(Qe), m4 = Le(), y4 = e4.shouldForwardProp || m4.shouldForwardProp;
      (0, import_react.useDebugValue)(d3);
      var v3 = I(r5, f4, c4) || C, g4 = function(e5, n2, o3) {
        for (var r6, s5 = __assign(__assign({}, n2), { className: void 0, theme: o3 }), i5 = 0; i5 < e5.length; i5 += 1) {
          var a5 = re(r6 = e5[i5]) ? r6(s5) : r6;
          for (var c5 in a5)
            s5[c5] = "className" === c5 ? ie(s5[c5], a5[c5]) : "style" === c5 ? __assign(__assign({}, s5[c5]), a5[c5]) : a5[c5];
        }
        return n2.className && (s5.className = ie(s5.className, n2.className)), s5;
      }(i4, r5, v3), S4 = g4.as || h3, w4 = {};
      for (var b3 in g4)
        void 0 === g4[b3] || "$" === b3[0] || "as" === b3 || "theme" === b3 && g4.theme === v3 || ("forwardedAs" === b3 ? w4.as = g4.forwardedAs : y4 && !y4(b3, S4) || (w4[b3] = g4[b3], y4 || false || isPropValid(b3) || rt.has(b3) || !A.has(S4) || (rt.add(b3), console.warn('styled-components: it looks like an unknown prop "'.concat(b3, '" is being sent through to the DOM, which will likely trigger a React console error. If you would like automatic filtering of unknown props, you can opt-into that behavior via `<StyleSheetManager shouldForwardProp={...}>` (connect an API like `@emotion/is-prop-valid`) or consider using transient props (`$` prefix for automatic filtering.)')))));
      var E4 = function(e5, t2) {
        var n2 = Le(), o3 = e5.generateAndInjectStyles(t2, n2.styleSheet, n2.stylis);
        return (0, import_react.useDebugValue)(o3), o3;
      }(a4, g4);
      e4.warnTooManyClasses && e4.warnTooManyClasses(E4);
      var N4 = ie(p4, d3);
      return E4 && (N4 += " " + E4), g4.className && (N4 += " " + g4.className), w4[L(S4) && !A.has(S4) ? "class" : "className"] = N4, w4.ref = s4, (0, import_react.createElement)(S4, w4);
    }(D3, e3, r4);
  }
  O3.displayName = y3;
  var D3 = import_react.default.forwardRef(O3);
  return D3.attrs = S3, D3.componentStyle = N3, D3.displayName = y3, D3.shouldForwardProp = w3, D3.foldedComponentIds = i3 ? ie(a3.foldedComponentIds, a3.styledComponentId) : "", D3.styledComponentId = g3, D3.target = i3 ? a3.target : e2, Object.defineProperty(D3, "defaultProps", { get: function() {
    return this._foldedDefaultProps;
  }, set: function(e3) {
    this._foldedDefaultProps = i3 ? function(e4) {
      for (var t2 = [], n2 = 1; n2 < arguments.length; n2++)
        t2[n2 - 1] = arguments[n2];
      for (var o3 = 0, r4 = t2; o3 < r4.length; o3++)
        le(e4, r4[o3], true);
      return e4;
    }({}, a3.defaultProps, e3) : e3;
  } }), P(y3, g3), D3.warnTooManyClasses = /* @__PURE__ */ function(e3, t2) {
    var n2 = {}, o3 = false;
    return function(r4) {
      if (!o3 && (n2[r4] = true, Object.keys(n2).length >= 200)) {
        var s4 = t2 ? ' with the id of "'.concat(t2, '"') : "";
        console.warn("Over ".concat(200, " classes were generated for component ").concat(e3).concat(s4, ".\n") + "Consider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"), o3 = true, n2 = {};
      }
    };
  }(y3, g3), ue(D3, function() {
    return ".".concat(D3.styledComponentId);
  }), c3 && oe(D3, e2, { attrs: true, componentStyle: true, displayName: true, foldedComponentIds: true, shouldForwardProp: true, styledComponentId: true, target: true }), D3;
}
function it(e2, t2) {
  for (var n2 = [e2[0]], o3 = 0, r3 = t2.length; o3 < r3; o3 += 1)
    n2.push(t2[o3], e2[o3 + 1]);
  return n2;
}
var at = function(e2) {
  return Object.assign(e2, { isCss: true });
};
function ct(t2) {
  for (var n2 = [], o3 = 1; o3 < arguments.length; o3++)
    n2[o3 - 1] = arguments[o3];
  if (re(t2) || ce(t2))
    return at(Je(it(_, __spreadArray([t2], n2, true))));
  var r3 = t2;
  return 0 === n2.length && 1 === r3.length && "string" == typeof r3[0] ? Je(r3) : at(Je(it(r3, n2)));
}
function lt(n2, o3, r3) {
  if (void 0 === r3 && (r3 = C), !o3)
    throw he(1, o3);
  var s3 = function(t2) {
    for (var s4 = [], i3 = 1; i3 < arguments.length; i3++)
      s4[i3 - 1] = arguments[i3];
    return n2(o3, r3, ct.apply(void 0, __spreadArray([t2], s4, false)));
  };
  return s3.attrs = function(e2) {
    return lt(n2, o3, __assign(__assign({}, r3), { attrs: Array.prototype.concat(r3.attrs, e2).filter(Boolean) }));
  }, s3.withConfig = function(e2) {
    return lt(n2, o3, __assign(__assign({}, r3), e2));
  }, s3;
}
var ut = function(e2) {
  return lt(st, e2);
};
var pt = ut;
A.forEach(function(e2) {
  pt[e2] = ut(e2);
});
var dt = function() {
  function e2(e3, t2) {
    this.rules = e3, this.componentId = t2, this.isStatic = Xe(e3), Te.registerId(this.componentId + 1);
  }
  return e2.prototype.createStyles = function(e3, t2, n2, o3) {
    var r3 = o3(ae(Je(this.rules, t2, n2, o3)), ""), s3 = this.componentId + e3;
    n2.insertRules(s3, s3, r3);
  }, e2.prototype.removeStyles = function(e3, t2) {
    t2.clearRules(this.componentId + e3);
  }, e2.prototype.renderStyles = function(e3, t2, n2, o3) {
    e3 > 2 && Te.registerId(this.componentId + e3), this.removeStyles(e3, n2), this.createStyles(e3, t2, n2, o3);
  }, e2;
}();
function ft(t2) {
  for (var n2 = [], o3 = 1; o3 < arguments.length; o3++)
    n2[o3 - 1] = arguments[o3];
  "undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");
  var r3 = ae(ct.apply(void 0, __spreadArray([t2], n2, false))), s3 = z(r3);
  return new Ye(s3, r3);
}
var yt = function() {
  function e2() {
    var e3 = this;
    this._emitSheetCSS = function() {
      var t2 = e3.instance.toString(), n2 = _e(), o3 = ae([n2 && 'nonce="'.concat(n2, '"'), "".concat(f, '="true"'), "".concat(y, '="').concat(v, '"')].filter(Boolean), " ");
      return "<style ".concat(o3, ">").concat(t2, "</style>");
    }, this.getStyleTags = function() {
      if (e3.sealed)
        throw he(2);
      return e3._emitSheetCSS();
    }, this.getStyleElement = function() {
      var n2;
      if (e3.sealed)
        throw he(2);
      var r3 = ((n2 = {})[f] = "", n2[y] = v, n2.dangerouslySetInnerHTML = { __html: e3.instance.toString() }, n2), s3 = _e();
      return s3 && (r3.nonce = s3), [import_react.default.createElement("style", __assign({}, r3, { key: "sc-0-0" }))];
    }, this.seal = function() {
      e3.sealed = true;
    }, this.instance = new Te({ isServer: true }), this.sealed = false;
  }
  return e2.prototype.collectStyles = function(e3) {
    if (this.sealed)
      throw he(2);
    return import_react.default.createElement(Ge, { sheet: this.instance }, e3);
  }, e2.prototype.interleaveWithNodeStream = function(e3) {
    throw he(3);
  }, e2;
}();
"undefined" != typeof navigator && "ReactNative" === navigator.product && console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native");
var gt = "__sc-".concat(f, "__");
"undefined" != typeof window && (window[gt] || (window[gt] = 0), 1 === window[gt] && console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."), window[gt] += 1);

// node_modules/@microlink/mql/lightweight/index.js
function t(t2) {
  return t2 && t2.__esModule && Object.prototype.hasOwnProperty.call(t2, "default") ? t2.default : t2;
}
function e(t2) {
  if (t2.__esModule)
    return t2;
  var e2 = t2.default;
  if ("function" == typeof e2) {
    var r3 = function t3() {
      return this instanceof t3 ? Reflect.construct(e2, arguments, this.constructor) : e2.apply(this, arguments);
    };
    r3.prototype = e2.prototype;
  } else
    r3 = {};
  return Object.defineProperty(r3, "__esModule", { value: true }), Object.keys(t2).forEach(function(e3) {
    var s3 = Object.getOwnPropertyDescriptor(t2, e3);
    Object.defineProperty(r3, e3, s3.get ? s3 : { enumerable: true, get: function() {
      return t2[e3];
    } });
  }), r3;
}
var r2 = { exports: {} };
var s2 = /^https?:\/\//i;
var o2 = {};
function n(t2, e2, r3, s3, o3) {
  var i3, a3 = o3 ? o3 + r3 : o3;
  if (null == s3)
    e2 && (t2[o3] = s3);
  else if ("object" != typeof s3)
    t2[o3] = s3;
  else if (Array.isArray(s3))
    for (i3 = 0; i3 < s3.length; i3++)
      n(t2, e2, r3, s3[i3], a3 + i3);
  else
    for (i3 in s3)
      n(t2, e2, r3, s3[i3], a3 + i3);
}
o2.flattie = function(t2, e2, r3) {
  var s3 = {};
  return "object" == typeof t2 && n(s3, !!r3, e2 || ".", t2, ""), s3;
};
var i2 = { FREE: "https://api.microlink.io/", PRO: "https://pro.microlink.io/" };
var a2 = (t2) => null !== t2 && "object" == typeof t2;
var u2 = ({ VERSION: t2, MicrolinkError: e2, urlHttp: r3, got: s3, flatten: o3 }) => {
  const n2 = (t3) => {
    if (!a2(t3))
      return;
    const e3 = o3(t3);
    return Object.keys(e3).reduce((t4, r4) => (t4[`data.${r4}`] = e3[r4].toString(), t4), {});
  }, u3 = async (t3, r4 = {}) => {
    try {
      const e3 = await s3(t3, r4);
      return "buffer" === r4.responseType ? { body: e3.body, response: e3 } : { ...e3.body, response: e3 };
    } catch (r5) {
      const { response: s4 = {} } = r5, { statusCode: n3, body: i3, headers: u4 = {}, url: c4 = t3 } = s4, l5 = null != (o4 = i3) && null != o4.constructor && "function" == typeof o4.constructor.isBuffer && o4.constructor.isBuffer(o4), h3 = a2(i3) && !l5 ? i3 : ((t4, e3, r6) => {
        try {
          return JSON.parse(t4);
        } catch (s5) {
          const o5 = t4 || e3.message;
          return { status: "error", data: { url: o5 }, more: "https://microlink.io/efatalclient", code: "EFATALCLIENT", message: o5, url: r6 };
        }
      })(l5 ? i3.toString() : i3, r5, c4);
      throw new e2({ ...h3, message: h3.message, url: c4, statusCode: n3, headers: u4 });
    }
    var o4;
  }, c3 = (t3, { data: e3, apiKey: r4, endpoint: s4, retry: a3, cache: u4, ...c4 } = {}, { responseType: l5 = "json", headers: h3, ...p3 } = {}) => {
    const f3 = !!r4;
    return [`${s4 || i2[f3 ? "PRO" : "FREE"]}?${new URLSearchParams({ url: t3, ...n2(e3), ...o3(c4) }).toString()}`, { ...p3, responseType: l5, cache: u4, retry: a3, headers: f3 ? { ...h3, "x-api-key": r4 } : { ...h3 } }];
  }, l4 = (t3) => async (s4, o4, n3) => {
    ((t4 = "") => {
      if (!r3(t4)) {
        const r4 = `The \`url\` as \`${t4}\` is not valid. Ensure it has protocol (http or https) and hostname.`;
        throw new e2({ status: "fail", data: { url: r4 }, more: "https://microlink.io/docs/api/api-parameters/url", code: "EINVALURLCLIENT", message: r4, url: t4 });
      }
    })(s4);
    const [i3, a3] = c3(s4, o4, { ...t3, ...n3 });
    return u3(i3, a3);
  }, h2 = l4();
  return h2.extend = l4, h2.MicrolinkError = e2, h2.getApiUrl = c3, h2.fetchFromApi = u3, h2.mapRules = n2, h2.version = t2, h2.stream = s3.stream, h2;
};
var c2 = class extends Error {
  constructor(t2, e2, r3) {
    const s3 = `${t2.status || 0 === t2.status ? t2.status : ""} ${t2.statusText || ""}`.trim();
    super(`Request failed with ${s3 ? `status code ${s3}` : "an unknown error"}`), Object.defineProperty(this, "response", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "request", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "options", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.name = "HTTPError", this.response = t2, this.request = e2, this.options = r3;
  }
};
var l2 = class extends Error {
  constructor(t2) {
    super("Request timed out"), Object.defineProperty(this, "request", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.name = "TimeoutError", this.request = t2;
  }
};
var h = (t2) => null !== t2 && "object" == typeof t2;
var p2 = (...t2) => {
  for (const e2 of t2)
    if ((!h(e2) || Array.isArray(e2)) && void 0 !== e2)
      throw new TypeError("The `options` argument must be an object");
  return d({}, ...t2);
};
var f2 = (t2 = {}, e2 = {}) => {
  const r3 = new globalThis.Headers(t2), s3 = e2 instanceof globalThis.Headers, o3 = new globalThis.Headers(e2);
  for (const [t3, e3] of o3.entries())
    s3 && "undefined" === e3 || void 0 === e3 ? r3.delete(t3) : r3.set(t3, e3);
  return r3;
};
var d = (...t2) => {
  let e2 = {}, r3 = {};
  for (const s3 of t2)
    if (Array.isArray(s3))
      Array.isArray(e2) || (e2 = []), e2 = [...e2, ...s3];
    else if (h(s3)) {
      for (let [t3, r4] of Object.entries(s3))
        h(r4) && t3 in e2 && (r4 = d(e2[t3], r4)), e2 = { ...e2, [t3]: r4 };
      h(s3.headers) && (r3 = f2(r3, s3.headers), e2.headers = r3);
    }
  return e2;
};
var y2 = (() => {
  let t2 = false, e2 = false;
  const r3 = "function" == typeof globalThis.ReadableStream, s3 = "function" == typeof globalThis.Request;
  return r3 && s3 && (e2 = new globalThis.Request("https://empty.invalid", { body: new globalThis.ReadableStream(), method: "POST", get duplex() {
    return t2 = true, "half";
  } }).headers.has("Content-Type")), t2 && !e2;
})();
var b = "function" == typeof globalThis.AbortController;
var m2 = "function" == typeof globalThis.ReadableStream;
var _2 = "function" == typeof globalThis.FormData;
var w2 = ["get", "post", "put", "patch", "head", "delete"];
var g2 = { json: "application/json", text: "text/*", formData: "multipart/form-data", arrayBuffer: "*/*", blob: "*/*" };
var T2 = 2147483647;
var R2 = Symbol("stop");
var v2 = { json: true, parseJson: true, searchParams: true, prefixUrl: true, retry: true, timeout: true, hooks: true, throwHttpErrors: true, onDownloadProgress: true, fetch: true };
var E2 = { method: true, headers: true, body: true, mode: true, credentials: true, cache: true, redirect: true, referrer: true, referrerPolicy: true, integrity: true, keepalive: true, signal: true, window: true, dispatcher: true, duplex: true };
var x2 = (t2) => w2.includes(t2) ? t2.toUpperCase() : t2;
var q2 = [413, 429, 503];
var P2 = { limit: 2, methods: ["get", "put", "head", "delete", "options", "trace"], statusCodes: [408, 413, 429, 500, 502, 503, 504], afterStatusCodes: q2, maxRetryAfter: Number.POSITIVE_INFINITY, backoffLimit: Number.POSITIVE_INFINITY, delay: (t2) => 0.3 * 2 ** (t2 - 1) * 1e3 };
var j2 = (t2 = {}) => {
  if ("number" == typeof t2)
    return { ...P2, limit: t2 };
  if (t2.methods && !Array.isArray(t2.methods))
    throw new Error("retry.methods must be an array");
  if (t2.statusCodes && !Array.isArray(t2.statusCodes))
    throw new Error("retry.statusCodes must be an array");
  return { ...P2, ...t2, afterStatusCodes: q2 };
};
var A2 = class _A {
  static create(t2, e2) {
    const r3 = new _A(t2, e2), s3 = async () => {
      if ("number" == typeof r3._options.timeout && r3._options.timeout > T2)
        throw new RangeError("The `timeout` option cannot be greater than 2147483647");
      await Promise.resolve();
      let t3 = await r3._fetch();
      for (const e3 of r3._options.hooks.afterResponse) {
        const s4 = await e3(r3.request, r3._options, r3._decorateResponse(t3.clone()));
        s4 instanceof globalThis.Response && (t3 = s4);
      }
      if (r3._decorateResponse(t3), !t3.ok && r3._options.throwHttpErrors) {
        let e3 = new c2(t3, r3.request, r3._options);
        for (const t4 of r3._options.hooks.beforeError)
          e3 = await t4(e3);
        throw e3;
      }
      if (r3._options.onDownloadProgress) {
        if ("function" != typeof r3._options.onDownloadProgress)
          throw new TypeError("The `onDownloadProgress` option must be a function");
        if (!m2)
          throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");
        return r3._stream(t3.clone(), r3._options.onDownloadProgress);
      }
      return t3;
    }, o3 = r3._options.retry.methods.includes(r3.request.method.toLowerCase()) ? r3._retry(s3) : s3();
    for (const [t3, s4] of Object.entries(g2))
      o3[t3] = async () => {
        r3.request.headers.set("accept", r3.request.headers.get("accept") || s4);
        const n2 = (await o3).clone();
        if ("json" === t3) {
          if (204 === n2.status)
            return "";
          if (0 === (await n2.clone().arrayBuffer()).byteLength)
            return "";
          if (e2.parseJson)
            return e2.parseJson(await n2.text());
        }
        return n2[t3]();
      };
    return o3;
  }
  constructor(t2, e2 = {}) {
    Object.defineProperty(this, "request", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "abortController", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_retryCount", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_input", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_options", { enumerable: true, configurable: true, writable: true, value: void 0 }), this._input = t2;
    const r3 = "credentials" in Request.prototype;
    if (this._options = { credentials: r3 ? this._input.credentials : void 0, ...e2, headers: f2(this._input.headers, e2.headers), hooks: d({ beforeRequest: [], beforeRetry: [], beforeError: [], afterResponse: [] }, e2.hooks), method: x2(e2.method ?? this._input.method), prefixUrl: String(e2.prefixUrl || ""), retry: j2(e2.retry), throwHttpErrors: false !== e2.throwHttpErrors, timeout: e2.timeout ?? 1e4, fetch: e2.fetch ?? globalThis.fetch.bind(globalThis) }, "string" != typeof this._input && !(this._input instanceof URL || this._input instanceof globalThis.Request))
      throw new TypeError("`input` must be a string, URL, or Request");
    if (this._options.prefixUrl && "string" == typeof this._input) {
      if (this._input.startsWith("/"))
        throw new Error("`input` must not begin with a slash when using `prefixUrl`");
      this._options.prefixUrl.endsWith("/") || (this._options.prefixUrl += "/"), this._input = this._options.prefixUrl + this._input;
    }
    if (b) {
      if (this.abortController = new globalThis.AbortController(), this._options.signal) {
        const t3 = this._options.signal;
        this._options.signal.addEventListener("abort", () => {
          this.abortController.abort(t3.reason);
        });
      }
      this._options.signal = this.abortController.signal;
    }
    if (y2 && (this._options.duplex = "half"), this.request = new globalThis.Request(this._input, this._options), this._options.searchParams) {
      const t3 = "?" + ("string" == typeof this._options.searchParams ? this._options.searchParams.replace(/^\?/, "") : new URLSearchParams(this._options.searchParams).toString()), e3 = this.request.url.replace(/(?:\?.*?)?(?=#|$)/, t3);
      !(_2 && this._options.body instanceof globalThis.FormData || this._options.body instanceof URLSearchParams) || this._options.headers && this._options.headers["content-type"] || this.request.headers.delete("content-type"), this.request = new globalThis.Request(new globalThis.Request(e3, { ...this.request }), this._options);
    }
    void 0 !== this._options.json && (this._options.body = JSON.stringify(this._options.json), this.request.headers.set("content-type", this._options.headers.get("content-type") ?? "application/json"), this.request = new globalThis.Request(this.request, { body: this._options.body }));
  }
  _calculateRetryDelay(t2) {
    if (this._retryCount++, this._retryCount <= this._options.retry.limit && !(t2 instanceof l2)) {
      if (t2 instanceof c2) {
        if (!this._options.retry.statusCodes.includes(t2.response.status))
          return 0;
        const e3 = t2.response.headers.get("Retry-After");
        if (e3 && this._options.retry.afterStatusCodes.includes(t2.response.status)) {
          let t3 = Number(e3);
          return Number.isNaN(t3) ? t3 = Date.parse(e3) - Date.now() : t3 *= 1e3, void 0 !== this._options.retry.maxRetryAfter && t3 > this._options.retry.maxRetryAfter ? 0 : t3;
        }
        if (413 === t2.response.status)
          return 0;
      }
      const e2 = this._options.retry.delay(this._retryCount);
      return Math.min(this._options.retry.backoffLimit, e2);
    }
    return 0;
  }
  _decorateResponse(t2) {
    return this._options.parseJson && (t2.json = async () => this._options.parseJson(await t2.text())), t2;
  }
  async _retry(t2) {
    try {
      return await t2();
    } catch (e2) {
      const r3 = Math.min(this._calculateRetryDelay(e2), T2);
      if (0 !== r3 && this._retryCount > 0) {
        await async function(t3, { signal: e3 }) {
          return new Promise((r4, s3) => {
            function o3() {
              clearTimeout(n2), s3(e3.reason);
            }
            e3 && (e3.throwIfAborted(), e3.addEventListener("abort", o3, { once: true }));
            const n2 = setTimeout(() => {
              e3 == null ? void 0 : e3.removeEventListener("abort", o3), r4();
            }, t3);
          });
        }(r3, { signal: this._options.signal });
        for (const t3 of this._options.hooks.beforeRetry) {
          if (await t3({ request: this.request, options: this._options, error: e2, retryCount: this._retryCount }) === R2)
            return;
        }
        return this._retry(t2);
      }
      throw e2;
    }
  }
  async _fetch() {
    for (const t3 of this._options.hooks.beforeRequest) {
      const e2 = await t3(this.request, this._options);
      if (e2 instanceof Request) {
        this.request = e2;
        break;
      }
      if (e2 instanceof Response)
        return e2;
    }
    const t2 = ((t3, e2) => {
      const r3 = {};
      for (const s3 in e2)
        s3 in E2 || s3 in v2 || s3 in t3 || (r3[s3] = e2[s3]);
      return r3;
    })(this.request, this._options);
    return false === this._options.timeout ? this._options.fetch(this.request.clone(), t2) : async function(t3, e2, r3, s3) {
      return new Promise((o3, n2) => {
        const i3 = setTimeout(() => {
          r3 && r3.abort(), n2(new l2(t3));
        }, s3.timeout);
        s3.fetch(t3, e2).then(o3).catch(n2).then(() => {
          clearTimeout(i3);
        });
      });
    }(this.request.clone(), t2, this.abortController, this._options);
  }
  _stream(t2, e2) {
    const r3 = Number(t2.headers.get("content-length")) || 0;
    let s3 = 0;
    return 204 === t2.status ? (e2 && e2({ percent: 1, totalBytes: r3, transferredBytes: s3 }, new Uint8Array()), new globalThis.Response(null, { status: t2.status, statusText: t2.statusText, headers: t2.headers })) : new globalThis.Response(new globalThis.ReadableStream({ async start(o3) {
      const n2 = t2.body.getReader();
      e2 && e2({ percent: 0, transferredBytes: 0, totalBytes: r3 }, new Uint8Array()), await async function t3() {
        const { done: i3, value: a3 } = await n2.read();
        if (i3)
          o3.close();
        else {
          if (e2) {
            s3 += a3.byteLength;
            e2({ percent: 0 === r3 ? 0 : s3 / r3, transferredBytes: s3, totalBytes: r3 }, a3);
          }
          o3.enqueue(a3), await t3();
        }
      }();
    } }), { status: t2.status, statusText: t2.statusText, headers: t2.headers });
  }
};
var C2 = (t2) => {
  const e2 = (e3, r3) => A2.create(e3, p2(t2, r3));
  for (const r3 of w2)
    e2[r3] = (e3, s3) => A2.create(e3, p2(t2, s3, { method: r3 }));
  return e2.create = (t3) => C2(p2(t3)), e2.extend = (e3) => C2(p2(t2, e3)), e2.stop = R2, e2;
};
var O2 = C2();
var k2 = e(Object.freeze({ __proto__: null, HTTPError: c2, TimeoutError: l2, default: O2 }));
var S2 = (t2) => {
  try {
    const { href: e2 } = new URL(t2);
    return s2.test(e2) && e2;
  } catch (t3) {
    return false;
  }
};
var { flattie: U2 } = o2;
var L2 = u2;
var { default: N2 } = k2;
var I2 = class extends Error {
  constructor(t2) {
    super(), this.name = "MicrolinkError", Object.assign(this, t2), this.description = this.message, this.message = this.code ? `${this.code}, ${this.description}` : this.description;
  }
};
var D2 = async (t2, { responseType: e2, ...r3 }) => {
  try {
    void 0 === r3.timeout && (r3.timeout = false);
    const s3 = await N2(t2, r3), o3 = await s3[e2](), { headers: n2, status: i3 } = s3;
    return { url: s3.url, body: o3, headers: n2, statusCode: i3 };
  } catch (t3) {
    if (t3.response) {
      const { response: e3 } = t3;
      t3.response = { ...e3, headers: Array.from(e3.headers.entries()).reduce((t4, [e4, r4]) => (t4[e4] = r4, t4), {}), statusCode: e3.status, body: await e3.text() };
    }
    throw t3;
  }
};
D2.stream = (...t2) => N2(...t2).then((t3) => t3.body);
var B2 = L2({ MicrolinkError: I2, urlHttp: S2, got: D2, flatten: U2, VERSION: "0.12.3" });
r2.exports = B2;
var M2 = r2.exports.arrayBuffer = B2.extend({ responseType: "arrayBuffer" });
var H2 = r2.exports.extend = B2.extend;
var $2 = r2.exports.fetchFromApi = B2.fetchFromApi;
var F2 = r2.exports.getApiUrl = B2.getApiUrl;
var J2 = r2.exports.mapRules = B2.mapRules;
var V2 = r2.exports.MicrolinkError = B2.MicrolinkError;
var W2 = r2.exports.version = B2.version;
var Y2 = t(r2.exports);

// node_modules/@microlink/react/dist/microlink.mjs
var _excluded$8 = ["accessibility", "debounce", "ellipsis", "is", "lines", "text"];
function ownKeys$4(e2, r3) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o3 = Object.getOwnPropertySymbols(e2);
    r3 && (o3 = o3.filter(function(r4) {
      return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
    })), t2.push.apply(t2, o3);
  }
  return t2;
}
function _objectSpread$4(e2) {
  for (var r3 = 1; r3 < arguments.length; r3++) {
    var t2 = null != arguments[r3] ? arguments[r3] : {};
    r3 % 2 ? ownKeys$4(Object(t2), true).forEach(function(r4) {
      _defineProperty(e2, r4, t2[r4]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys$4(Object(t2)).forEach(function(r4) {
      Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
    });
  }
  return e2;
}
var l3 = (_ref) => {
  let {
    accessibility: l4 = true,
    debounce: o3 = 300,
    ellipsis: u3 = "…",
    is: c3 = "div",
    lines: s3 = 3,
    text: d2
  } = _ref, v3 = _objectWithoutProperties(_ref, _excluded$8);
  const a3 = (0, import_react2.useRef)(null), f3 = (0, import_react2.useRef)("."), h2 = _objectSpread$4(_objectSpread$4({
    ref: a3
  }, l4 ? {
    title: d2
  } : {}), v3), g3 = (0, import_react2.useMemo)(() => "string" == typeof d2 && d2.length > 0, [d2]), m3 = (0, import_react2.useCallback)(() => {
    var e2, t2, n2, r3;
    if (!g3)
      return;
    const i3 = (e3) => {
      f3.current = e3, null != a3.current && (a3.current.innerText = e3);
    };
    i3(".");
    const l5 = ((null !== (t2 = null === (e2 = a3.current) || void 0 === e2 ? void 0 : e2.clientHeight) && void 0 !== t2 ? t2 : 0) + 1) * s3 + 1, o4 = "…" === u3 ? 5 : 1.2 * u3.length;
    let c4 = 0, v4 = 0, h3 = d2.length;
    for (; c4 <= h3; ) {
      v4 = Math.floor((c4 + h3) / 2);
      if (i3(d2.slice(0, v4)), v4 === d2.length)
        return;
      (null !== (r3 = null === (n2 = a3.current) || void 0 === n2 ? void 0 : n2.clientHeight) && void 0 !== r3 ? r3 : 0) <= l5 ? c4 = v4 + 1 : h3 = v4 - 1;
    }
    i3(d2.slice(0, Math.max(v4 - o4, 0)).trim() + u3);
  }, [u3, g3, s3, d2]);
  return (0, import_react2.useEffect)(() => {
    m3();
    const e2 = /* @__PURE__ */ ((e3, t2) => {
      let n2;
      const r3 = () => {
        n2 = void 0, e3();
      };
      return () => {
        const i3 = null == n2;
        clearTimeout(n2), n2 = setTimeout(r3, t2), i3 && e3();
      };
    })(m3, o3);
    return window.addEventListener("resize", e2), () => window.removeEventListener("resize", e2);
  }, [m3, o3]), g3 ? (0, import_react2.createElement)(c3, h2, f3.current) : null;
};
function getDefaultExportFromCjs(x3) {
  return x3 && x3.__esModule && Object.prototype.hasOwnProperty.call(x3, "default") ? x3["default"] : x3;
}
var src = () => /^https?:\/\/(localhost|0|10|127|192(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\[::1?\])/gi;
var localhostUrl = getDefaultExportFromCjs(src);
var isSSR = typeof window === "undefined";
var castArray = (value) => [].concat(value);
var getPreferredMedia = (data, mediaProps) => {
  let prefer;
  for (let index = 0; index < mediaProps.length; index++) {
    const key = mediaProps[index];
    const value = data[key];
    if (!isNil(value)) {
      prefer = key;
      break;
    }
  }
  return prefer;
};
var isFunction = (fn) => typeof fn === "function";
var isObject = (obj) => typeof obj === "object";
var isNil = (value) => value == null;
var getUrlPath = (data) => isObject(data) ? data.url : data;
var someProp = (data, props) => data[props.find((prop) => !isNil(data[prop]))];
var media = {
  mobile: function() {
    return ct`
    @media (max-width: 48em) {
      ${ct(...arguments)};
    }
  `;
  },
  desktop: function() {
    return ct`
    @media (min-width: 48em) {
      ${ct(...arguments)};
    }
  `;
  }
};
var getApiUrl = (_ref) => {
  let {
    apiKey,
    contrast = false,
    data,
    endpoint,
    force,
    headers,
    media: media2,
    prerender,
    proxy,
    ttl,
    url
  } = _ref;
  return F2(url, {
    apiKey,
    audio: media2.includes("audio"),
    data,
    endpoint,
    force,
    headers,
    iframe: media2.includes("iframe"),
    palette: contrast,
    prerender,
    proxy,
    screenshot: media2.includes("screenshot"),
    ttl,
    video: media2.includes("video")
  });
};
var isLarge = (cardSize) => cardSize === "large";
var isSmall = (cardSize) => cardSize === "small";
var imageProxy = (url) => localhostUrl().test(url) ? url : `https://images.weserv.nl/?${new URLSearchParams({
  url,
  default: url,
  l: 9,
  af: "",
  il: "",
  n: -1
}).toString()}`;
var isLazySupported = !isSSR && "IntersectionObserver" in window;
var formatSeconds = (secs) => {
  const secsToNum = parseInt(secs, 10);
  const hours = Math.floor(secsToNum / 3600);
  const minutes = Math.floor(secsToNum / 60) % 60;
  const seconds = secsToNum % 60;
  return [hours, minutes, seconds].filter((v3, i3) => v3 > 0 || i3 > 0).map((v3) => v3 >= 10 ? v3 : `0${v3}`).join(":");
};
var clampNumber = (num, min, max) => {
  switch (true) {
    case num <= min:
      return min;
    case num >= max:
      return max;
    default:
      return num;
  }
};
var BASE_CLASSNAME = "microlink_card";
var CONTENT_BASE_CLASSNAME = `${BASE_CLASSNAME}__content`;
var MEDIA_BASE_CLASSNAME = `${BASE_CLASSNAME}__media`;
var CONTROLS_BASE_CLASSNAME = `${MEDIA_BASE_CLASSNAME}__controls`;
var classNames = {
  main: BASE_CLASSNAME,
  content: CONTENT_BASE_CLASSNAME,
  title: `${CONTENT_BASE_CLASSNAME}_title`,
  description: `${CONTENT_BASE_CLASSNAME}_description`,
  url: `${CONTENT_BASE_CLASSNAME}_url`,
  mediaWrapper: `${MEDIA_BASE_CLASSNAME}_wrapper`,
  media: MEDIA_BASE_CLASSNAME,
  image: `${MEDIA_BASE_CLASSNAME}_image`,
  videoWrapper: `${MEDIA_BASE_CLASSNAME}_video_wrapper`,
  video: `${MEDIA_BASE_CLASSNAME}_video`,
  audioWrapper: `${MEDIA_BASE_CLASSNAME}_audio_wrapper`,
  audio: `${MEDIA_BASE_CLASSNAME}_audio`,
  mediaControls: CONTROLS_BASE_CLASSNAME,
  playbackControl: `${CONTROLS_BASE_CLASSNAME}_playback`,
  volumeControl: `${CONTROLS_BASE_CLASSNAME}_volume`,
  rwControl: `${CONTROLS_BASE_CLASSNAME}_rewind`,
  ffwControl: `${CONTROLS_BASE_CLASSNAME}_fast_forward`,
  rateControl: `${CONTROLS_BASE_CLASSNAME}_rate`,
  progressBar: `${CONTROLS_BASE_CLASSNAME}_progress_bar`,
  progressTime: `${CONTROLS_BASE_CLASSNAME}_progress_time`,
  spinner: `${CONTROLS_BASE_CLASSNAME}_spinner`,
  iframe: `${BASE_CLASSNAME}__iframe`
};
var _excluded$7 = ["useNanoClamp", "children"];
function ownKeys$3(e2, r3) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o3 = Object.getOwnPropertySymbols(e2);
    r3 && (o3 = o3.filter(function(r4) {
      return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
    })), t2.push.apply(t2, o3);
  }
  return t2;
}
function _objectSpread$3(e2) {
  for (var r3 = 1; r3 < arguments.length; r3++) {
    var t2 = null != arguments[r3] ? arguments[r3] : {};
    r3 % 2 ? ownKeys$3(Object(t2), true).forEach(function(r4) {
      _defineProperty(e2, r4, t2[r4]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys$3(Object(t2)).forEach(function(r4) {
      Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
    });
  }
  return e2;
}
var Clamp = (_ref) => {
  let {
    children,
    className,
    lines
  } = _ref;
  return isNil(children) ? null : import_react2.default.createElement(l3, {
    className,
    lines,
    text: children,
    is: "p"
  });
};
var StyledClamp = pt(Clamp)`
  &&& {
    text-align: inherit;
    font-weight: inherit;
    font-family: inherit;
    color: inherit;
    margin: 0;

    ${(_ref2) => {
  let {
    $useNanoClamp
  } = _ref2;
  return !$useNanoClamp && ct`
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
      `;
}}
  }
`;
var CardText = (_ref3) => {
  let {
    useNanoClamp = true,
    children
  } = _ref3, props = _objectWithoutProperties(_ref3, _excluded$7);
  const textProps = useNanoClamp ? props : _objectSpread$3(_objectSpread$3({}, props), {}, {
    as: "p",
    title: children
  });
  return import_react2.default.createElement(StyledClamp, _extends({
    $useNanoClamp: useNanoClamp
  }, textProps), children);
};
var speed = {
  short: "100ms",
  medium: "150ms",
  long: "300ms"
};
var animation = {
  short: "cubic-bezier(.25,.8,.25,1)",
  medium: "cubic-bezier(.25,.8,.25,1)",
  long: "cubic-bezier(.4, 0, .2, 1)"
};
var createTransition = (properties, s3) => {
  const suffix = `${speed[s3]} ${animation[s3]}`;
  return properties.map((property) => `${property} ${suffix}`).join(", ");
};
var transition = {
  short: function() {
    for (var _len = arguments.length, properties = new Array(_len), _key = 0; _key < _len; _key++) {
      properties[_key] = arguments[_key];
    }
    return createTransition(properties, "short");
  },
  medium: function() {
    for (var _len2 = arguments.length, properties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      properties[_key2] = arguments[_key2];
    }
    return createTransition(properties, "medium");
  },
  long: function() {
    for (var _len3 = arguments.length, properties = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      properties[_key3] = arguments[_key3];
    }
    return createTransition(properties, "long");
  }
};
var font = {
  sans: "InterUI, -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif",
  mono: "'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace"
};
var _excluded$6 = ["autoPlay", "children", "controls", "loop", "mediaRef", "muted", "playsInline", "size"];
function ownKeys$2(e2, r3) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o3 = Object.getOwnPropertySymbols(e2);
    r3 && (o3 = o3.filter(function(r4) {
      return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
    })), t2.push.apply(t2, o3);
  }
  return t2;
}
function _objectSpread$2(e2) {
  for (var r3 = 1; r3 < arguments.length; r3++) {
    var t2 = null != arguments[r3] ? arguments[r3] : {};
    r3 % 2 ? ownKeys$2(Object(t2), true).forEach(function(r4) {
      _defineProperty(e2, r4, t2[r4]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys$2(Object(t2)).forEach(function(r4) {
      Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
    });
  }
  return e2;
}
var initialState = {};
var GlobalContext = import_react2.default.createContext(initialState);
var GlobalState = (_ref) => {
  let {
    autoPlay,
    children,
    controls,
    loop,
    mediaRef,
    muted,
    playsInline,
    size
  } = _ref, rest = _objectWithoutProperties(_ref, _excluded$6);
  const [state, setState] = (0, import_react2.useState)(initialState);
  const updateState = (0, import_react2.useCallback)((newState) => setState((currentState) => _objectSpread$2(_objectSpread$2({}, currentState), newState)), []);
  const props = (0, import_react2.useMemo)(() => ({
    autoPlay,
    controls,
    loop,
    mediaRef,
    muted,
    playsInline,
    size
  }), [autoPlay, controls, loop, mediaRef, muted, playsInline, size]);
  const values = (0, import_react2.useMemo)(() => ({
    props,
    state,
    updateState
  }), [props, state, updateState]);
  return import_react2.default.createElement(GlobalContext.Provider, {
    value: values
  }, children(rest));
};
var REGEX_STRIP_WWW = /^www\./;
var BADGE_WIDTH = "16px";
var BADGE_HEIGHT = "12px";
var getHostname = (href) => {
  if (isNil(href))
    return "";
  const {
    hostname
  } = new URL(href);
  return hostname.replace(REGEX_STRIP_WWW, "");
};
var mobileDescriptionStyle = ct`
  ${media.mobile`
    > p {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  `};
`;
var Content = pt("div").attrs({
  className: classNames.content
})`
  display: flex;
  padding: 10px 15px;
  min-width: 0;
  box-sizing: border-box;
  ${(_ref) => {
  let {
    $cardSize
  } = _ref;
  return ct`
    flex: ${!isLarge($cardSize) ? 1 : "0 0 125px"};
    justify-content: ${!isSmall($cardSize) ? "space-around" : "space-between"};
    flex-direction: ${!isSmall($cardSize) ? "column" : "row"};
    align-items: ${!isSmall($cardSize) ? "stretch" : "center"};
  `;
}};
`;
var Header = pt("header").attrs({
  className: classNames.title
})`
  text-align: left;
  font-weight: bold;
  margin: 0;
  width: 100%;
  ${(_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return ct`
    flex-grow: ${!isSmall($cardSize) ? 1.2 : 0.8};
    font-size: ${!isSmall($cardSize) ? "16px" : "15px"};

    ${isSmall($cardSize) && ct`
      min-width: 0;
      padding-right: 14px;
    `}
  `;
}}
`;
var Description = pt("div").attrs({
  className: classNames.description
})`
  text-align: left;
  font-size: 14px;
  flex-grow: 2;
  margin: auto 0;
  line-height: 18px;
  font-weight: normal;
  ${(_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return !isLarge($cardSize) && mobileDescriptionStyle;
}};
`;
var Footer = pt("footer").attrs({
  className: classNames.url
})`
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-align: left;
  margin: 0;
  flex-grow: 0;
  font-weight: normal;
  ${(_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return ct`
    font-size: ${!isSmall($cardSize) ? "12px" : "10px"};
    ${!isSmall($cardSize) && "width: 100%;"}
  `;
}};
`;
var Author = pt(CardText)`
  opacity: 0.75;
  transition: ${transition.medium("opacity")};
  will-change: opacity;

  .${classNames.main}:hover & {
    opacity: 1;
  }
`;
var PoweredBy = pt("span").attrs({
  title: "microlink.io"
})`
  background: url('https://cdn.microlink.io/logo/logo.svg') no-repeat center
    center;
  display: block;
  margin-left: 15px;
  transition: ${transition.medium("filter", "opacity")};
  will-change: filter, opacity;
  &:not(:hover) {
    filter: grayscale(100%);
    opacity: 0.75;
  }

  min-width: ${BADGE_WIDTH};
  width: ${BADGE_WIDTH};
  background-size: ${BADGE_WIDTH};
  height: ${BADGE_HEIGHT};
`;
var CardContent = () => {
  const {
    state: {
      description,
      title,
      url
    },
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const isSmallCard = isSmall(size);
  const formattedUrl = (0, import_react2.useMemo)(() => getHostname(url), [url]);
  const handleOnClick = (0, import_react2.useCallback)((e2) => {
    e2.preventDefault();
    window.open("https://www.microlink.io", "_blank");
  }, []);
  return import_react2.default.createElement(Content, {
    $cardSize: size
  }, import_react2.default.createElement(Header, {
    $cardSize: size
  }, import_react2.default.createElement(CardText, {
    $useNanoClamp: false
  }, title)), !isSmallCard && import_react2.default.createElement(Description, {
    $cardSize: size
  }, import_react2.default.createElement(CardText, {
    lines: 2
  }, description)), import_react2.default.createElement(Footer, {
    $cardSize: size
  }, import_react2.default.createElement(Author, {
    $useNanoClamp: false
  }, formattedUrl), import_react2.default.createElement(PoweredBy, {
    onClick: handleOnClick
  })));
};
var emptyStatePulse = ft`
  0% {
    background: #e1e8ed;
  }
  70% {
    background: #cdd4d8;
  }
  100% {
    background: #e1e8ed;
  }
`;
var emptyStateImagePulse = ft`
  0% {
    background: #e1e8ed;
  }
  70% {
    background: #dce3e8;
  }
  100% {
    background: #e1e8ed;
  }
`;
var emptyStateAnimation = ct`
  animation: ${emptyStatePulse} .75s linear infinite;
`;
var emptyStateImageAnimation = ct`
  animation: ${emptyStateImagePulse} 1.25s linear infinite;
`;
var ImageLoadCatcher = pt("img")`
  height: 1px;
  width: 1px;
  position: absolute;
  z-index: -1;
`;
var loadingOverlay = ct`
  &::after {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background: #e1e8ed;
    z-index: 1;
    transition: ${transition.medium("opacity", "visibility")};
    will-change: opacity;

    ${(_ref) => {
  let {
    $isLoading
  } = _ref;
  return ct`
      opacity: ${$isLoading ? 1 : 0};
      visibility: ${$isLoading ? "visible" : "hidden"};
    `;
}};
  }
`;
var mediaSizeStyles = {
  small: ct`
    flex: 0 0 48px;
  `,
  normal: ct`
    flex: 0 0 125px;

    ${media.mobile`
      flex: 0 0 92px;
    `}
  `,
  large: ct`
    flex: 1;

    &::before {
      padding-bottom: 0;
    }
  `
};
var StyledWrap = pt("div")`
  background: transparent no-repeat center center / cover;
  display: block;
  overflow: hidden;
  height: auto;
  position: relative;

  &::before {
    content: '';
    padding-bottom: 100%;
    display: block;
  }

  ${(_ref) => {
  let {
    $cardSize
  } = _ref;
  return mediaSizeStyles[$cardSize];
}};

  ${loadingOverlay};
`;
var Wrap$1 = (props) => {
  const {
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  return import_react2.default.createElement(StyledWrap, _extends({
    $cardSize: size
  }, props));
};
var ImageWrap = pt(Wrap$1).attrs({
  className: `${classNames.media} ${classNames.image}`
})`
  background-image: ${(_ref) => {
  let {
    url
  } = _ref;
  return url ? `url('${imageProxy(url)}')` : "";
}};
`;
var ImageComponent = (props) => {
  const {
    state: {
      imageUrl
    }
  } = (0, import_react2.useContext)(GlobalContext);
  return import_react2.default.createElement(ImageWrap, _extends({
    url: imageUrl
  }, props));
};
var _FooterEmpty;
var MediaEmpty = pt(ImageComponent)`
  ${emptyStateImageAnimation};
`;
var HeaderEmpty = pt("span")`
  opacity: 0.8;
  height: 16px;
  width: ${(_ref) => {
  let {
    $cardSize
  } = _ref;
  return !isSmall($cardSize) ? "60%" : "75%";
}};
  display: block;
  background: #e1e8ed;
  margin: ${(_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return !isSmall($cardSize) ? "2px 0 8px" : "0 20px 0 0";
}};
  ${emptyStateAnimation};

  ${(_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return !isLarge($cardSize) && `
    height: 15px;
  `;
}};
`;
var DescriptionEmpty = pt("span")`
  opacity: 0.8;
  height: 14px;
  width: 95%;
  display: block;
  position: relative;
  ${emptyStateAnimation};
  animation-delay: 0.125s;
`;
var FooterEmpty = pt("span")`
  opacity: 0.8;
  height: 12px;
  width: 30%;
  display: block;
  ${emptyStateAnimation} animation-delay: .25s;

  ${(_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return !isLarge($cardSize) && `
    height: 10px;
  `;
}};
`;
var CardEmptyState = () => {
  const {
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const isSmallCard = isSmall(size);
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(MediaEmpty, {
    $cardSize: size
  }), import_react2.default.createElement(Content, {
    $cardSize: size
  }, import_react2.default.createElement(HeaderEmpty, {
    $cardSize: size
  }), !isSmallCard ? import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(DescriptionEmpty, {
    $cardSize: size
  }), import_react2.default.createElement(DescriptionEmpty, {
    $cardSize: size,
    style: {
      marginBottom: "12px"
    }
  })) : null, _FooterEmpty || (_FooterEmpty = import_react2.default.createElement(FooterEmpty, null))));
};
var MediaButton = pt("div")`
  backface-visibility: hidden;
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
  transition: ${transition.short("transform")};
  will-change: transform;

  > svg {
    display: block;
  }

  &:active:not(:focus) {
    transform: scale(0.9);
  }
`;
var _path$2;
var _path2$2;
var VolumeMute = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 14 14"
}, props), _path$2 || (_path$2 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M15.5 6.205l-.705-.705L13 7.295 11.205 5.5l-.705.705L12.295 8 10.5 9.795l.705.705L13 8.705l1.795 1.795.705-.705L13.705 8 15.5 6.205zM9 15a.5.5 0 01-.355-.15L4.835 11H1.5a.5.5 0 01-.5-.5v-5a.5.5 0 01.5-.5h3.335l3.81-3.85a.5.5 0 01.705 0 .5.5 0 01.15.35v13a.5.5 0 01-.5.5z",
  transform: "translate(-1 -1)"
})));
var VolumeUp = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 14 14"
}, props), _path2$2 || (_path2$2 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M13.58 4.04l-.765.645a5 5 0 01-.145 6.615l.735.7a6 6 0 00.175-7.94v-.02zM10.79 6a3 3 0 01-.09 3.97l.735.68a4 4 0 00.115-5.295L10.79 6zM9 15a.5.5 0 01-.355-.15L4.835 11H1.5a.5.5 0 01-.5-.5v-5a.5.5 0 01.5-.5h3.335l3.81-3.85a.5.5 0 01.705 0 .5.5 0 01.15.35v13a.5.5 0 01-.5.5z",
  transform: "translate(-1 -1)"
})));
var BottomControls = pt("div")`
  z-index: 2;
  position: absolute;
  bottom: ${(_ref) => {
  let {
    $cardSize
  } = _ref;
  return isLarge($cardSize) ? 18 : 14;
}}px;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: ${transition.medium("opacity")};
  will-change: opacity;
`;
var VolumeIcon = pt("svg")`
  stroke: #fff;
`;
var VolumeButton = pt(MediaButton).attrs({
  className: classNames.volumeControl
})`
  ${VolumeIcon} {
    width: ${(_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return isLarge($cardSize) ? 16 : 14;
}}px;
    height: ${(_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return isLarge($cardSize) ? 16 : 14;
}}px;

    ${(_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return !isLarge($cardSize) && media.mobile`
      width: 12px;
      height: 12px;
    `;
}}
  }
`;
var PlaybackRateButton = pt(MediaButton).attrs({
  className: classNames.rateControl
})`
  font-size: ${(_ref5) => {
  let {
    $cardSize
  } = _ref5;
  return isLarge($cardSize) ? 12 : 10;
}}px;
  min-width: ${(_ref6) => {
  let {
    $cardSize
  } = _ref6;
  return isLarge($cardSize) ? 33 : 28;
}}px;
  line-height: 1;
  font-weight: bold;
  border: 1.5px solid #fff;
  border-radius: 9999px;
  padding: 1px 5px;
  text-align: center;
  color: #fff;
  margin-left: 10px;

  ${(_ref7) => {
  let {
    $cardSize
  } = _ref7;
  return !isLarge($cardSize) && media.mobile`
    font-size: 8px;
    margin-left: 8px;
    min-width: 23px;
  `;
}}
`;
var TimeLabel = pt("span").attrs({
  className: classNames.progressTime
})`
  margin: ${(_ref8) => {
  let {
    right
  } = _ref8;
  return !right ? "0 auto 0 0" : "0 0 0 auto";
}};
  font-family: ${font.mono};
  font-size: 12px;
  padding: 0 16px;
  color: #fff;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
`;
var FooterControls = (_ref9) => {
  let {
    $cardSize,
    currentTime,
    endTime,
    isMuted,
    onMuteClick,
    onPlaybackRateClick,
    playbackRate
  } = _ref9;
  const VolumeComponent = (0, import_react2.useMemo)(() => isMuted ? VolumeMute : VolumeUp, [isMuted]);
  const isLargeCard = (0, import_react2.useMemo)(() => isLarge($cardSize), [$cardSize]);
  return import_react2.default.createElement(BottomControls, {
    $cardSize
  }, isLargeCard && import_react2.default.createElement(TimeLabel, null, currentTime), import_react2.default.createElement(VolumeButton, {
    title: isMuted ? "Unmute" : "Mute",
    $cardSize,
    onClick: onMuteClick
  }, import_react2.default.createElement(VolumeIcon, {
    as: VolumeComponent
  })), import_react2.default.createElement(PlaybackRateButton, {
    title: "Playback Rate",
    $cardSize,
    onClick: onPlaybackRateClick
  }, import_react2.default.createElement("span", null, playbackRate, "x")), isLargeCard && import_react2.default.createElement(TimeLabel, {
    right: true
  }, endTime));
};
var _excluded$5 = ["isPlaying"];
var _path$1;
var _path2$1;
var Pause = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 16 20"
}, props), _path$1 || (_path$1 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M12 6h-2a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2V8a2 2 0 00-2-2zm10 0h-2a2 2 0 00-2 2v16a2 2 0 002 2h2a2 2 0 002-2V8a2 2 0 00-2-2z",
  transform: "translate(-8 -6)"
})));
var Play = (props) => import_react2.default.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 21 24"
}, props), _path2$1 || (_path2$1 = import_react2.default.createElement("path", {
  fill: "#FFF",
  fillRule: "evenodd",
  stroke: "none",
  strokeWidth: "1",
  d: "M7 28a1 1 0 01-1-1V5a1 1 0 011.501-.865l19 11a1 1 0 010 1.73l-19 11A.998.998 0 017 28z",
  transform: "translate(-6 -4)"
})));
var iconSizes = {
  large: "50px",
  normal: "35px",
  small: "20px"
};
var PlaybackIcon = pt("svg")`
  stroke: #fff;
`;
var PlaybackButtonWrap = pt(MediaButton).attrs({
  className: classNames.playbackControl
})`
  ${PlaybackIcon} {
    ${(_ref) => {
  let {
    $cardSize
  } = _ref;
  return ct`
      width: ${iconSizes[$cardSize]};
      height: ${iconSizes[$cardSize]};
      padding: ${isLarge($cardSize) ? 0 : "8px"};

      ${!isLarge($cardSize) && !isSmall($cardSize) && media.mobile`
        width: calc(${iconSizes.small} * 1.2);
        height: calc(${iconSizes.small} * 1.2);
      `}
    `;
}}
  }
`;
var PlaybackButton = (_ref2) => {
  let {
    isPlaying
  } = _ref2, props = _objectWithoutProperties(_ref2, _excluded$5);
  const PlaybackComponent = (0, import_react2.useMemo)(() => isPlaying ? Pause : Play, [isPlaying]);
  return import_react2.default.createElement(PlaybackButtonWrap, _extends({
    title: isPlaying ? "Pause" : "Play"
  }, props), import_react2.default.createElement(PlaybackIcon, {
    as: PlaybackComponent
  }));
};
var SCRUBBER_SIZE = 12;
var scrubberSizeScales = {
  normal: 0.8,
  small: 0.9
};
var getScrubberSize = (size) => Math.floor(SCRUBBER_SIZE * (scrubberSizeScales[size] || 1));
var Scrubber = pt("div").attrs((_ref) => {
  let {
    isVisible,
    positionX
  } = _ref;
  return {
    style: {
      left: positionX,
      transform: `scale(${isVisible ? 1 : 0.5}) translate(-50%, -50%)`,
      opacity: isVisible ? 1 : 0,
      visibility: isVisible ? "visible" : "hidden"
    }
  };
})`
  position: absolute;
  top: 50%;
  background: #ffffff;
  border-radius: 50%;
  transform-origin: center center;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
  transition: ${transition.short("transform", "opacity", "visibility")};
  will-change: left, transform, opacity, visibility;
  backface-visibility: hidden;
  z-index: 3;

  ${(_ref2) => {
  let {
    $cardSize
  } = _ref2;
  const scrubberSize = getScrubberSize($cardSize);
  return ct`
      height: ${scrubberSize}px;
      width: ${scrubberSize}px;
    `;
}}
`;
var _excluded$4 = ["isDragging", "isVisible", "label", "positionX", "size"];
var BASE_FONT_SIZE = 11;
var sizeScales$1 = {
  normal: 0.8
};
var getMarkerFontSize = (size) => BASE_FONT_SIZE * (sizeScales$1[size] || 1);
var TooltipBase = pt("span").attrs((_ref) => {
  let {
    position: position2,
    isDragging,
    visible
  } = _ref;
  return {
    style: {
      left: `${position2}px`,
      top: visible ? "-4px" : "0px",
      visibility: visible ? "visible" : "hidden",
      opacity: visible ? 1 : 0,
      transform: `translate(-50%, ${!isDragging ? -100 : -110}%)`
    }
  };
})`
  position: absolute;
  background: rgba(24, 25, 25, 0.75);
  color: #fff;
  text-shadow: 0 1px 2px rgba(24, 25, 25, 0.15);
  padding: 2px 3px;
  border-radius: 4px;
  font-family: ${font.mono};
  font-size: ${(_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return getMarkerFontSize($cardSize);
}}px;
  line-height: 1;
  transition: ${transition.medium("opacity", "visibility", "transform")},
    ${transition.long("top")};
  will-change: top, left, visibility, opacity, transform;
  backface-visibility: hidden;
`;
var Tooltip = (0, import_react2.forwardRef)((_ref3, ref) => {
  let {
    isDragging,
    isVisible,
    label,
    positionX,
    size
  } = _ref3, props = _objectWithoutProperties(_ref3, _excluded$4);
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(TooltipBase, _extends({
    visible: isVisible,
    position: positionX,
    $cardSize: size,
    ref,
    isDragging
  }, props), label));
});
Tooltip.displayName = "Tooltip";
var _excluded$3 = ["key"];
var HEIGHT$1 = 6;
var PADDING = 6;
var heightScales = {
  normal: 0.7,
  small: 0.6
};
var activeHeightScales = {
  small: 0.9,
  large: 1.4
};
var getProgressBarHeight = (size) => Math.floor(HEIGHT$1 * (heightScales[size] || 1));
var getProgressBarActiveHeight = (size) => Math.floor(HEIGHT$1 * (activeHeightScales[size] || 1));
var OuterWrap$1 = pt("div").attrs(() => ({
  className: classNames.progressBar
}))`
  position: relative;
  padding: ${PADDING}px ${PADDING / 2}px ${PADDING / 2}px;
  z-index: 2;
  backface-visibility: hidden;
`;
var BarsWrap = pt("div").attrs((_ref) => {
  let {
    $cardSize,
    isDragging
  } = _ref;
  if (isDragging) {
    const activeHeight = getProgressBarActiveHeight($cardSize);
    return {
      style: {
        height: `${activeHeight}px`
      }
    };
  }
  return {};
})`
  background: transparent;
  border-radius: 9999px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  background: rgba(255, 255, 255, 0.15);
  transition: ${transition.short("height")};
  will-change: height;
  pointer-events: none;
  position: relative;

  ${(_ref2) => {
  let {
    $cardSize
  } = _ref2;
  const height = getProgressBarHeight($cardSize);
  const activeHeight = getProgressBarActiveHeight($cardSize);
  return ct`
      height: ${height}px;

      ${OuterWrap$1}:hover & {
        height: ${activeHeight}px;
      }
    `;
}}
`;
var ProgressLine = pt("div")`
  border-radius: inherit;
  height: 100%;
  position: relative;
  overflow: hidden;
`;
var ProgressMask = pt("div").attrs((_ref3) => {
  let {
    maskScale
  } = _ref3;
  return {
    style: {
      transform: `scaleX(${maskScale})`
    }
  };
})`
  position: absolute;
  left: 0;
  top: -50%;
  height: 200%;
  width: 100%;
  background: #ffffff;
  transform-origin: left center;
  will-change: transform;
`;
var ProgressHover = pt("div").attrs((_ref4) => {
  let {
    cursorRatio,
    isHovering,
    progressPercent
  } = _ref4;
  return {
    style: {
      left: progressPercent,
      transform: `scaleX(${cursorRatio})`,
      opacity: isHovering ? 1 : 0,
      visibility: isHovering ? "visible" : "hidden"
    }
  };
})`
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.4);
  transform-origin: left center;
  transition: ${transition.short("opacity", "visibility")};
  will-change: left, transform, opacity, visible;
`;
var BufferedChunk = pt("div").attrs((_ref5) => {
  let {
    start,
    end
  } = _ref5;
  return {
    style: {
      left: `${start}px`,
      right: `${end}px`
    }
  };
})`
  background: rgba(255, 255, 255, 0.35);
  position: absolute;
  top: 0;
  bottom: 0;
`;
var ProgressBar = (_ref6) => {
  let {
    bufferedMedia,
    cursorX,
    duration,
    hoveredTime,
    isDragging,
    isHovering,
    onClick,
    onMouseDown,
    onMouseOver,
    progress,
    showTooltip
  } = _ref6;
  const {
    props: {
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const wrapRef = (0, import_react2.useRef)();
  const tooltipRef = (0, import_react2.useRef)();
  const isSmallCard = (0, import_react2.useMemo)(() => isSmall(size), [size]);
  const getWrapWidth = (0, import_react2.useCallback)(() => {
    if (wrapRef.current) {
      return wrapRef.current.getBoundingClientRect().width - PADDING;
    }
    return 0;
  }, []);
  const progressRatio = (0, import_react2.useMemo)(() => clampNumber(progress / duration, 0, 1), [duration, progress]);
  const progressPercent = (0, import_react2.useMemo)(() => `${clampNumber(progressRatio * 100, 1, 99)}%`, [progressRatio]);
  const cursorRatio = (0, import_react2.useMemo)(() => {
    if (wrapRef.current) {
      const wrapWidth = getWrapWidth();
      const startPoint = progressRatio * wrapWidth;
      const cursorPosition = cursorX - startPoint;
      const width = wrapWidth - startPoint;
      if (cursorPosition > 0) {
        return clampNumber((cursorPosition / width).toFixed(3), 0, 0.99);
      }
    }
    return 0;
  }, [cursorX, getWrapWidth, progressRatio]);
  const bufferedMediaChunks = (0, import_react2.useMemo)(() => {
    const wrapWidth = getWrapWidth();
    return bufferedMedia.map((chunk, key) => {
      const start = chunk.start * wrapWidth;
      const end = wrapWidth - chunk.end * wrapWidth;
      return {
        key,
        start,
        end
      };
    });
  }, [bufferedMedia, getWrapWidth]);
  const tooltipLabel = (0, import_react2.useMemo)(() => formatSeconds(hoveredTime), [hoveredTime]);
  const tooltipPositionX = (0, import_react2.useMemo)(() => {
    if (wrapRef.current && tooltipRef.current) {
      const wrapWidth = getWrapWidth();
      const tooltipWidth = tooltipRef.current.getBoundingClientRect().width;
      const tooltipHalf = tooltipWidth / 2;
      return clampNumber(cursorX, tooltipHalf, wrapWidth - tooltipHalf);
    }
    return 0;
  }, [cursorX, getWrapWidth]);
  const mouseEvents = (0, import_react2.useMemo)(() => ({
    onClick,
    onMouseDown,
    onMouseOver
  }), [onClick, onMouseDown, onMouseOver]);
  const showAccessories = (0, import_react2.useMemo)(() => isDragging || isHovering, [isDragging, isHovering]);
  return import_react2.default.createElement(OuterWrap$1, _extends({
    $cardSize: size,
    ref: wrapRef
  }, mouseEvents), import_react2.default.createElement(BarsWrap, {
    $cardSize: size,
    isDragging
  }, import_react2.default.createElement(ProgressLine, null, import_react2.default.createElement(ProgressHover, {
    cursorRatio,
    isHovering,
    progressPercent
  }), bufferedMediaChunks.map((_ref7) => {
    let {
      key
    } = _ref7, chunk = _objectWithoutProperties(_ref7, _excluded$3);
    return import_react2.default.createElement(BufferedChunk, _extends({
      key
    }, chunk));
  }), import_react2.default.createElement(ProgressMask, {
    maskScale: progressRatio
  })), import_react2.default.createElement(Scrubber, {
    $cardSize: size,
    isVisible: showAccessories,
    positionX: progressPercent
  }), !isSmallCard && import_react2.default.createElement(Tooltip, {
    isDragging,
    isVisible: showAccessories,
    label: tooltipLabel,
    positionX: tooltipPositionX,
    ref: tooltipRef,
    size
  })));
};
var _path;
var _path2;
var _excluded$2 = ["$cardSize"];
var _excluded2 = ["$cardSize"];
var _excluded3 = ["type", "$cardSize"];
var Backward = (_ref) => {
  let props = _objectWithoutProperties(_ref, _excluded$2);
  return import_react2.default.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 29"
  }, props), _path || (_path = import_react2.default.createElement("path", {
    fill: "#FFF",
    fillRule: "evenodd",
    stroke: "none",
    strokeWidth: "1",
    d: "M4 18c0 6.627 5.373 12 12 12s12-5.373 12-12S22.627 6 16 6h-4V1L6 7l6 6V8h4c5.523 0 10 4.477 10 10s-4.477 10-10 10S6 23.523 6 18H4zm15.63 4.13a2.84 2.84 0 01-1.28-.27 2.44 2.44 0 01-.89-.77 3.57 3.57 0 01-.52-1.25 7.69 7.69 0 01-.17-1.68 7.83 7.83 0 01.17-1.68c.094-.445.27-.87.52-1.25.23-.325.535-.59.89-.77.4-.188.838-.28 1.28-.27a2.44 2.44 0 012.16 1 5.23 5.23 0 01.7 2.93 5.23 5.23 0 01-.7 2.93 2.44 2.44 0 01-2.16 1.08zm0-1.22c.411.025.8-.19 1-.55a3.38 3.38 0 00.37-1.51v-1.38a3.31 3.31 0 00-.29-1.5 1.23 1.23 0 00-2.06 0 3.31 3.31 0 00-.29 1.5v1.38a3.38 3.38 0 00.29 1.51c.195.356.575.57.98.55zm-9 1.09v-1.18h2v-5.19l-1.86 1-.55-1.06 2.32-1.3H14v6.5h1.78V22h-5.15z",
    transform: "translate(-4 -1)"
  })));
};
var Forward = (_ref2) => {
  let props = _objectWithoutProperties(_ref2, _excluded2);
  return import_react2.default.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 29"
  }, props), _path2 || (_path2 = import_react2.default.createElement("path", {
    fill: "#FFF",
    fillRule: "evenodd",
    stroke: "none",
    strokeWidth: "1",
    d: "M26 18c0 5.523-4.477 10-10 10S6 23.523 6 18 10.477 8 16 8h4v5l6-6-6-6v5h-4C9.373 6 4 11.373 4 18s5.373 12 12 12 12-5.373 12-12h-2zm-6.36 4.13a2.81 2.81 0 01-1.28-.27 2.36 2.36 0 01-.89-.77 3.39 3.39 0 01-.47-1.25 7.12 7.12 0 01-.17-1.68 7.24 7.24 0 01.17-1.68 3.46 3.46 0 01.52-1.25 2.36 2.36 0 01.89-.77c.4-.19.838-.282 1.28-.27a2.44 2.44 0 012.16 1 5.31 5.31 0 01.7 2.93 5.31 5.31 0 01-.7 2.93 2.44 2.44 0 01-2.21 1.08zm0-1.22a1 1 0 001-.55c.22-.472.323-.99.3-1.51v-1.38a3.17 3.17 0 00-.3-1.5 1.22 1.22 0 00-2.05 0 3.18 3.18 0 00-.29 1.5v1.38a3.25 3.25 0 00.29 1.51 1 1 0 001.05.55zm-7.02-3.49c.355.035.71-.06 1-.27a.84.84 0 00.31-.68v-.08a.94.94 0 00-.3-.74 1.2 1.2 0 00-.83-.27 1.65 1.65 0 00-.89.24 2.1 2.1 0 00-.68.68l-.93-.83a5.37 5.37 0 01.44-.51 2.7 2.7 0 01.54-.4 2.55 2.55 0 01.7-.27 3.25 3.25 0 01.87-.1 3.94 3.94 0 011.06.14c.297.078.576.214.82.4.224.168.408.383.54.63.123.26.184.543.18.83a2 2 0 01-.11.67 1.82 1.82 0 01-.32.52 1.79 1.79 0 01-.47.36 2.27 2.27 0 01-.57.2V18c.219.04.431.11.63.21a1.7 1.7 0 01.85.93c.084.234.124.481.12.73a2 2 0 01-.2.92 2 2 0 01-.58.72 2.66 2.66 0 01-.89.45 3.76 3.76 0 01-1.15.16 4.1 4.1 0 01-1-.11 3.1 3.1 0 01-.76-.31 2.76 2.76 0 01-.56-.45 4.22 4.22 0 01-.44-.55l1.07-.81c.082.147.175.288.28.42.105.128.226.243.36.34.137.097.29.171.45.22a2 2 0 00.57.07 1.45 1.45 0 001-.3 1.12 1.12 0 00.34-.85v-.08a1 1 0 00-.37-.8 1.78 1.78 0 00-1.06-.28h-.76v-1.21h.74z",
    transform: "translate(-4 -1)"
  })));
};
var SeekIcon = pt("svg")`
  stroke: #fff;
  width: ${(_ref3) => {
  let {
    $cardSize
  } = _ref3;
  return isLarge($cardSize) ? 30 : 24;
}}px;
  height: ${(_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return isLarge($cardSize) ? 30 : 24;
}}px;

  ${(_ref5) => {
  let {
    $cardSize
  } = _ref5;
  return !isLarge($cardSize) && media.mobile`
    width: 0;
    height: 0;
  `;
}}
`;
var SeekButtonWrap = pt(MediaButton)`
  margin: 0 ${(_ref6) => {
  let {
    $cardSize
  } = _ref6;
  return isLarge($cardSize) ? "28px" : "3px";
}};
`;
var SeekButton = (_ref7) => {
  let {
    type = "rewind",
    $cardSize
  } = _ref7, props = _objectWithoutProperties(_ref7, _excluded3);
  const IconComponent = (0, import_react2.useMemo)(() => type === "rewind" ? Backward : Forward, [type]);
  return import_react2.default.createElement(SeekButtonWrap, _extends({
    title: type === "rewind" ? "Rewind" : "Forward",
    $cardSize
  }, props), import_react2.default.createElement(SeekIcon, {
    as: IconComponent,
    $cardSize
  }));
};
var _Svg;
var BASE_SIZE = 12;
var BASE_OFFSET = 6;
var offsetScales = {
  normal: 0.8,
  small: 0.6
};
var sizeScales = {
  normal: 0.9,
  small: 0.8
};
var getSpinnerOffset = (size) => Math.floor(BASE_OFFSET * (offsetScales[size] || 1));
var getSpinnerSize = (size) => Math.floor(BASE_SIZE * (sizeScales[size] || 1));
var rotate = ft`
  100% {
    transform: rotate(360deg);
  }
`;
var dash = ft`
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
`;
var Wrap = pt(MediaButton).attrs((_ref) => {
  let {
    isVisible
  } = _ref;
  return {
    style: {
      opacity: isVisible ? 1 : 0,
      visibility: isVisible ? "visible" : "hidden"
    }
  };
})((_ref2) => {
  let {
    $cardSize
  } = _ref2;
  const size = `${getSpinnerSize($cardSize)}px`;
  const offset = `${getSpinnerOffset($cardSize)}px`;
  return ct`
    position: absolute;
    width: ${size};
    right: ${offset};
    top: ${offset};
    transition: ${transition.medium("opacity", "visibility")};
    will-change: opacity, visibility;
    pointer-events: none;
  `;
});
var Svg = pt("svg")`
  width: 100%;
  animation: ${rotate} 2s linear infinite;
  will-change: transform;
`;
var Circle = pt("circle")`
  stroke: #fff;
  stroke-linecap: round;
  stroke-width: 7;
  fill: none;
  animation: ${dash} 1.5s ease-in-out infinite;
  will-change: stroke-dasharray, stroke-dashoffset;
`;
var Spinner = (_ref3) => {
  let {
    size,
    isVisible
  } = _ref3;
  return import_react2.default.createElement(Wrap, {
    $cardSize: size,
    className: classNames.spinner,
    isVisible
  }, _Svg || (_Svg = import_react2.default.createElement(Svg, {
    viewBox: "0 0 50 50"
  }, import_react2.default.createElement(Circle, {
    cx: "25",
    cy: "25",
    r: "20"
  }))));
};
var SPACE_KEY = 32;
var L_ARROW_KEY = 37;
var R_ARROW_KEY = 39;
var M_KEY = 77;
var OuterWrap = pt("div").attrs({
  className: classNames.mediaControls
})`
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  transition: ${transition.long("background")}, ${transition.medium("opacity")};
  will-change: background;
  display: flex;
  flex-direction: column;
  pointer-events: auto;

  ${(_ref) => {
  let {
    hasInteracted,
    isDragging,
    isPlaying
  } = _ref;
  const bg = "rgba(0, 0, 0, 0.35)";
  const dragBg = "rgba(0, 0, 0, 0.2)";
  const isPaused = hasInteracted && !isPlaying;
  return ct`
      .${classNames.main}:hover & {
        background: ${!isDragging ? bg : dragBg};
      }

      .${classNames.main}:not(:hover) & {
        opacity: ${!hasInteracted || isPaused ? 1 : 0};
        ${isPaused && `background: ${bg}`};
      }
    `;
}}
`;
var InnerWrap = pt("div")`
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
`;
var ControlsTop = pt("div")`
  flex: 1;

  ${(_ref2) => {
  let {
    isVisible
  } = _ref2;
  return !isVisible && ct`
      *[class*='${classNames.mediaControls}']:not(.${classNames.progressTime}) {
        transition: ${transition.medium("opacity", "visibility")};
        opacity: 0;
        visibility: hidden;
      }
    `;
}}
`;
var getNextPlaybackRate = (rate) => {
  switch (rate) {
    case 1:
      return 1.25;
    case 1.25:
      return 1.5;
    case 1.5:
      return 2;
    default:
      return 1;
  }
};
var Controls = (_ref3) => {
  let {
    MediaComponent,
    mediaProps
  } = _ref3;
  const {
    props: {
      autoPlay,
      controls,
      mediaRef: propRef,
      muted,
      loop,
      size
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const [duration, setDuration] = (0, import_react2.useState)(0);
  const [progress, setProgress] = (0, import_react2.useState)(0);
  const [buffered, setBuffered] = (0, import_react2.useState)([]);
  const [cursorX, setCursorX] = (0, import_react2.useState)(0);
  const [hoveredTime, setHoveredTime] = (0, import_react2.useState)(0);
  const [isPlaying, setIsPlaying] = (0, import_react2.useState)(autoPlay);
  const [isMuted, setIsMuted] = (0, import_react2.useState)(muted);
  const [isBuffering, setIsBuffering] = (0, import_react2.useState)(false);
  const [isHovering, setIsHovering] = (0, import_react2.useState)(false);
  const [isDragging, setIsDragging] = (0, import_react2.useState)(false);
  const [playbackRate, setPlaybackRate] = (0, import_react2.useState)(1);
  const [hasInteracted, setHasInteracted] = (0, import_react2.useState)(autoPlay);
  const [pausedByDrag, setPausedByDrag] = (0, import_react2.useState)(false);
  const mediaRef = (0, import_react2.useRef)();
  const setRefs = (0, import_react2.useCallback)((node2) => {
    mediaRef.current = node2;
    if (propRef) {
      if (isFunction(propRef)) {
        propRef(node2);
      } else {
        propRef.current = node2;
      }
    }
  }, [propRef]);
  const isNotSmall = (0, import_react2.useMemo)(() => !isSmall(size), [size]);
  const mediaEvents = (0, import_react2.useMemo)(() => ({
    onCanPlay: () => setIsBuffering(false),
    onLoadedMetadata: (e2) => setDuration(e2.currentTarget.duration),
    onPause: () => setIsPlaying(false),
    onPlay: () => setIsPlaying(true),
    onPlaying: () => setIsBuffering(false),
    onProgress: (e2) => setBuffered(e2.currentTarget.buffered),
    onRateChange: (e2) => setPlaybackRate(e2.currentTarget.playbackRate),
    onTimeUpdate: (e2) => setProgress(e2.currentTarget.currentTime),
    onVolumeChange: (e2) => setIsMuted(e2.currentTarget.muted),
    onWaiting: (e2) => setIsBuffering(true)
  }), []);
  const evaluateCursorPosition = (0, import_react2.useCallback)((event) => {
    if (mediaRef.current) {
      const bounds = event.currentTarget.getBoundingClientRect();
      const cursor = clampNumber(Math.floor(event.clientX - bounds.left), 0, bounds.width);
      const time = cursor / bounds.width * mediaRef.current.duration;
      return {
        cursor,
        time
      };
    }
    return {
      cursor: 0,
      time: 0
    };
  }, []);
  const togglePlayback = (0, import_react2.useCallback)(() => {
    if (mediaRef.current) {
      if (mediaRef.current.paused) {
        if (!hasInteracted) {
          setHasInteracted(true);
        }
        mediaRef.current.play();
      } else {
        mediaRef.current.pause();
      }
    }
  }, [hasInteracted]);
  const jumpTo = (0, import_react2.useCallback)((time) => {
    if (mediaRef.current) {
      const t2 = clampNumber(time, 0, mediaRef.current.duration);
      mediaRef.current.currentTime = t2;
      setProgress(t2);
    }
  }, []);
  const onSeekClick = (0, import_react2.useCallback)((event, type) => {
    event.preventDefault();
    event.stopPropagation();
    if (mediaRef.current) {
      const {
        currentTime: currentTime2
      } = mediaRef.current;
      jumpTo(type === "rewind" ? currentTime2 - 10 : currentTime2 + 30);
    }
  }, [jumpTo]);
  const onMuteClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (mediaRef.current) {
      mediaRef.current.muted = !mediaRef.current.muted;
    }
  }, []);
  const onPlaybackRateClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (mediaRef.current) {
      mediaRef.current.playbackRate = getNextPlaybackRate(mediaRef.current.playbackRate);
    }
  }, []);
  const onProgressBarClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    setIsDragging(false);
  }, []);
  const onProgressBarMouseDown = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    setIsDragging(true);
    const {
      time
    } = evaluateCursorPosition(event);
    jumpTo(time);
  }, [evaluateCursorPosition, jumpTo]);
  const onProgressBarMouseOver = (0, import_react2.useCallback)(() => setIsHovering(true), []);
  const onWrapClick = (0, import_react2.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (isDragging) {
      setIsDragging(false);
    } else {
      togglePlayback();
    }
  }, [isDragging, togglePlayback]);
  const onWrapMouseMove = (0, import_react2.useCallback)((event) => {
    if ((isDragging || isHovering) && mediaRef.current) {
      event.preventDefault();
      const {
        cursor,
        time
      } = evaluateCursorPosition(event);
      setHoveredTime(time);
      setCursorX(cursor);
      if (isDragging) {
        if (!mediaRef.current.paused) {
          mediaRef.current.pause();
          setPausedByDrag(true);
        }
        jumpTo(time);
      }
    }
  }, [evaluateCursorPosition, isDragging, isHovering, jumpTo]);
  const onWrapMouseOver = (0, import_react2.useCallback)((event) => {
    if (isDragging && event.buttons === 0) {
      setIsDragging(false);
    }
  }, [isDragging]);
  const onWrapKeyDown = (0, import_react2.useCallback)((event) => {
    if (isDragging) {
      return;
    }
    const {
      keyCode
    } = event;
    if ([SPACE_KEY, L_ARROW_KEY, R_ARROW_KEY, M_KEY].includes(keyCode) && mediaRef.current) {
      event.preventDefault();
      switch (keyCode) {
        case SPACE_KEY:
          togglePlayback();
          break;
        case L_ARROW_KEY:
          jumpTo(mediaRef.current.currentTime - 5);
          break;
        case R_ARROW_KEY:
          jumpTo(mediaRef.current.currentTime + 5);
          break;
        case M_KEY:
          mediaRef.current.muted = !mediaRef.current.muted;
          break;
      }
    }
  }, [isDragging, jumpTo, togglePlayback]);
  const outerWrapEvents = (0, import_react2.useMemo)(() => ({
    onClick: onWrapClick,
    onKeyDown: onWrapKeyDown,
    onMouseMove: onWrapMouseMove,
    onMouseOut: () => setIsHovering(false),
    onMouseOver: onWrapMouseOver
  }), [onWrapClick, onWrapKeyDown, onWrapMouseMove, onWrapMouseOver]);
  const outerWrapTitle = (0, import_react2.useMemo)(() => hasInteracted ? {
    title: ""
  } : {}, [hasInteracted]);
  const bufferedMedia = (0, import_react2.useMemo)(() => {
    if (buffered && buffered.length && mediaRef.current) {
      return [...Array(buffered.length).keys()].map((index) => {
        return {
          start: buffered.start(index) / mediaRef.current.duration,
          end: buffered.end(index) / mediaRef.current.duration
        };
      });
    }
    return [];
  }, [buffered]);
  const currentTime = (0, import_react2.useMemo)(() => formatSeconds(progress || 0), [progress]);
  const endTime = (0, import_react2.useMemo)(() => formatSeconds(duration || 0), [duration]);
  const footerControlsProps = (0, import_react2.useMemo)(() => ({
    $cardSize: size,
    currentTime,
    endTime,
    isMuted,
    onMuteClick,
    onPlaybackRateClick,
    playbackRate
  }), [currentTime, endTime, isMuted, onMuteClick, onPlaybackRateClick, playbackRate, size]);
  const progressBarProps = (0, import_react2.useMemo)(() => ({
    bufferedMedia,
    cursorX,
    duration,
    hoveredTime,
    isDragging,
    isHovering,
    onClick: onProgressBarClick,
    onMouseDown: onProgressBarMouseDown,
    onMouseOver: onProgressBarMouseOver,
    progress,
    showTooltip: isDragging || isHovering
  }), [bufferedMedia, cursorX, duration, hoveredTime, isDragging, isHovering, onProgressBarClick, onProgressBarMouseDown, onProgressBarMouseOver, progress]);
  (0, import_react2.useEffect)(() => {
    if (!isDragging && pausedByDrag && mediaRef.current && mediaRef.current.paused) {
      mediaRef.current.play();
      setPausedByDrag(false);
    }
  }, [pausedByDrag, isDragging]);
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(MediaComponent, _extends({}, mediaProps, mediaEvents, {
    ref: setRefs,
    autoPlay,
    loop,
    muted
  })), controls && import_react2.default.createElement(OuterWrap, _extends({}, outerWrapTitle, {
    tabIndex: 0,
    hasInteracted,
    isDragging,
    isPlaying
  }, outerWrapEvents), import_react2.default.createElement(Spinner, {
    size,
    isVisible: isBuffering
  }), !hasInteracted ? import_react2.default.createElement(InnerWrap, null, import_react2.default.createElement(PlaybackButton, {
    $cardSize: size
  })) : import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(ControlsTop, {
    isVisible: !isDragging
  }, import_react2.default.createElement(InnerWrap, null, isNotSmall && import_react2.default.createElement(SeekButton, {
    className: classNames.rwControl,
    type: "rewind",
    $cardSize: size,
    onClick: (event) => onSeekClick(event, "rewind")
  }), import_react2.default.createElement(PlaybackButton, {
    $cardSize: size,
    isPlaying
  }), isNotSmall && import_react2.default.createElement(SeekButton, {
    className: classNames.ffwControl,
    type: "fastforward",
    $cardSize: size,
    onClick: (event) => onSeekClick(event, "fastforward")
  })), isNotSmall && import_react2.default.createElement(FooterControls, footerControlsProps)), import_react2.default.createElement(ProgressBar, progressBarProps))));
};
var VideoDOM = pt("video")`
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  &::media-controls-start-playback-button {
    display: none;
    appearance: none;
  }
`;
var Video = (props) => {
  const {
    state: {
      imageUrl,
      playsInline,
      videoUrl
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const mediaProps = (0, import_react2.useMemo)(() => {
    const mediaProps2 = {
      className: `${classNames.media} ${classNames.video}`,
      src: videoUrl,
      playsInline
    };
    if (imageUrl)
      mediaProps2.poster = imageProxy(imageUrl);
    return mediaProps2;
  }, [imageUrl, playsInline, videoUrl]);
  return import_react2.default.createElement(Wrap$1, _extends({
    className: `${classNames.mediaWrapper} ${classNames.videoWrapper}`
  }, props), import_react2.default.createElement(Controls, {
    MediaComponent: VideoDOM,
    mediaProps
  }));
};
var Audio = (props) => {
  const {
    state: {
      audioUrl
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const mediaProps = (0, import_react2.useMemo)(() => ({
    className: `${classNames.media} ${classNames.audio}`,
    src: audioUrl
  }), [audioUrl]);
  return (
    // eslint-disable-next-line
    import_react2.default.createElement(ImageComponent, _extends({
      className: `${classNames.mediaWrapper} ${classNames.audioWrapper}`
    }, props), import_react2.default.createElement(Controls, {
      MediaComponent: "audio",
      mediaProps
    }))
  );
};
var isUrl = (url) => getUrlPath(url) !== null;
var MEDIA_COMPONENT = {
  video: Video,
  image: ImageComponent,
  audio: Audio
};
var getMediaType = (isAudio, isVideo) => {
  if (isAudio)
    return "audio";
  if (isVideo)
    return "video";
  return "image";
};
var CardMedia = () => {
  const {
    state: {
      imageUrl,
      isAudio,
      isVideo
    }
  } = (0, import_react2.useContext)(GlobalContext);
  const [isLoading, setIsLoading] = (0, import_react2.useState)(isUrl(imageUrl));
  const mediaType = getMediaType(isAudio, isVideo);
  const MediaComponent = MEDIA_COMPONENT[mediaType];
  return import_react2.default.createElement(import_react2.default.Fragment, null, import_react2.default.createElement(MediaComponent, {
    $isLoading: isLoading
  }), isLoading && import_react2.default.createElement(ImageLoadCatcher, {
    src: imageUrl,
    onLoad: () => setIsLoading(false)
  }));
};
var _excluded$1 = ["href", "rel", "target"];
function ownKeys$1(e2, r3) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o3 = Object.getOwnPropertySymbols(e2);
    r3 && (o3 = o3.filter(function(r4) {
      return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
    })), t2.push.apply(t2, o3);
  }
  return t2;
}
function _objectSpread$1(e2) {
  for (var r3 = 1; r3 < arguments.length; r3++) {
    var t2 = null != arguments[r3] ? arguments[r3] : {};
    r3 % 2 ? ownKeys$1(Object(t2), true).forEach(function(r4) {
      _defineProperty(e2, r4, t2[r4]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys$1(Object(t2)).forEach(function(r4) {
      Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
    });
  }
  return e2;
}
var HEIGHT = "382px";
var contrastStyle = (_ref) => {
  let {
    backgroundColor,
    color
  } = _ref;
  return ct`
  background-color: ${backgroundColor};
  border-color: ${color};
  transition-property: filter;
  will-change: filter;

  &&& {
    color: ${color};
  }

  &:hover {
    filter: brightness(90%);
  }
`;
};
var largeStyle = ct`
  flex-direction: column;
  height: ${HEIGHT};
  ${media.mobile`
    height: calc(${HEIGHT} * 7/9);
  `};
`;
var hoverStyle = ct`
  transition-property: background, border-color;
  will-change: background, border-color;
  &:hover {
    background-color: var(--microlink-hover-background-color, #f5f8fa);
    border-color: var(--microlink-hover-border-color, #8899a680);
  }
`;
var rtlStyle = (_ref2) => {
  let {
    $cardSize
  } = _ref2;
  return ct`
  flex-direction: ${isLarge($cardSize) ? "column-reverse" : "row-reverse"};
`;
};
var baseStyle = ct(() => `
  max-width: var(--microlink-max-width, 500px);
  background-color: var(--microlink-background-color, #fff);
  border-width: var(--microlink-border-width, 1px);
  border-style: var(--microlink-border-style, solid);
  border-color: var(--microlink-border-color, #e1e8ed);
  color: var(--microlink-color, #181919);
  overflow: hidden;
  font-family: ${font.sans};
  display: flex;
  text-decoration: none;
  opacity: 1;
  position: relative;
  transition-duration: ${speed.medium};
  transition-timing-function: ${animation.medium};

  &:active,
  &:hover {
    outline: 0;
  }
`);
var Element = pt("a")(baseStyle, (_ref3) => {
  let {
    $isLoading,
    contrast
  } = _ref3;
  return !$isLoading && !contrast && hoverStyle;
}, (_ref4) => {
  let {
    $cardSize
  } = _ref4;
  return isLarge($cardSize) && largeStyle;
}, (_ref5) => {
  let {
    direction
  } = _ref5;
  return direction === "rtl" && rtlStyle;
}, (_ref6) => {
  let {
    backgroundColor,
    color,
    contrast
  } = _ref6;
  return contrast && color && backgroundColor && contrastStyle;
}, (_ref7) => {
  let {
    backgroundColor,
    color,
    contrast
  } = _ref7;
  return contrast && (!color || !backgroundColor) && hoverStyle;
});
var CardWrap = (0, import_react2.forwardRef)((_ref8, ref) => {
  let {
    href,
    rel,
    target
  } = _ref8, restProps = _objectWithoutProperties(_ref8, _excluded$1);
  const {
    state: {
      backgroundColor,
      color,
      title
    },
    props: {
      size: $cardSize
    }
  } = (0, import_react2.useContext)(GlobalContext);
  return (0, import_react2.createElement)(Element, _objectSpread$1(_objectSpread$1(_objectSpread$1({}, restProps.as === "a" ? {
    href,
    rel,
    target
  } : void 0), restProps), {}, {
    backgroundColor,
    $cardSize,
    color,
    ref,
    title
  }));
});
CardWrap.displayName = "CardWrap";
CardWrap.defaultProps = {
  as: "a",
  rel: "noopener noreferrer",
  target: "_blank"
};
var useIntersectionObserver = (enabled, options) => {
  const [hasIntersected, setHasIntersected] = (0, import_react2.useState)(false);
  const refCallback = (0, import_react2.useCallback)((node2) => {
    if (enabled) {
      const onIntersect = (_ref, self) => {
        let [entry] = _ref;
        if (entry.isIntersecting) {
          setHasIntersected(true);
          self.unobserve(entry.target);
        }
      };
      const observer = new IntersectionObserver(onIntersect, options);
      if (node2 !== null) {
        observer.observe(node2);
      }
    } else {
      setHasIntersected(true);
    }
  }, [enabled, options]);
  return [hasIntersected, refCallback];
};
var _CardEmpty;
var _CardMedia;
var _CardContent;
var _excluded = ["className", "fetchData", "lazy", "loading", "media", "setData", "url", "apiKey"];
function ownKeys(e2, r3) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o3 = Object.getOwnPropertySymbols(e2);
    r3 && (o3 = o3.filter(function(r4) {
      return Object.getOwnPropertyDescriptor(e2, r4).enumerable;
    })), t2.push.apply(t2, o3);
  }
  return t2;
}
function _objectSpread(e2) {
  for (var r3 = 1; r3 < arguments.length; r3++) {
    var t2 = null != arguments[r3] ? arguments[r3] : {};
    r3 % 2 ? ownKeys(Object(t2), true).forEach(function(r4) {
      _defineProperty(e2, r4, t2[r4]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys(Object(t2)).forEach(function(r4) {
      Object.defineProperty(e2, r4, Object.getOwnPropertyDescriptor(t2, r4));
    });
  }
  return e2;
}
var Card = (props) => {
  const {
    className,
    fetchData,
    lazy,
    loading,
    media: mediaProp,
    setData,
    url,
    apiKey
    // destructuring to avoid pass it
  } = props, restProps = _objectWithoutProperties(props, _excluded);
  const mediaProps = (0, import_react2.useMemo)(() => castArray(mediaProp), [mediaProp]);
  const {
    updateState
  } = (0, import_react2.useContext)(GlobalContext);
  const [loadingState, setLoading] = (0, import_react2.useState)(true);
  const [iframeMedia, setIframeMedia] = (0, import_react2.useState)(null);
  const [isError, setIsError] = (0, import_react2.useState)(false);
  const isLoadingUndefined = (0, import_react2.useMemo)(() => loading === void 0, [loading]);
  const [apiUrl, apiUrlProps] = (0, import_react2.useMemo)(() => getApiUrl(_objectSpread(_objectSpread({}, props), {}, {
    media: mediaProps
  })), [mediaProps, props]);
  const isLazyEnabled = (0, import_react2.useMemo)(() => isLazySupported && (lazy === true || isObject(lazy)), [lazy]);
  const lazyOptions = (0, import_react2.useMemo)(() => isObject(lazy) ? lazy : void 0, [lazy]);
  const [hasIntersected, cardRef] = useIntersectionObserver(isLazyEnabled, lazyOptions);
  const canFetchData = (0, import_react2.useMemo)(() => !isLazyEnabled || isLazyEnabled && hasIntersected, [isLazyEnabled, hasIntersected]);
  const mergeData = (0, import_react2.useCallback)((fetchedData) => {
    const payload = isFunction(setData) ? setData(fetchedData) : _objectSpread(_objectSpread({}, fetchedData), setData);
    const {
      title,
      description,
      url: url2,
      video,
      audio,
      image,
      logo,
      iframe
    } = payload;
    const mediaFallback = image || logo || {};
    let media2 = mediaFallback;
    let videoUrl;
    let audioUrl;
    let isVideo = false;
    let isAudio = false;
    const preferredMedia = getPreferredMedia(payload, mediaProps);
    switch (preferredMedia) {
      case "audio":
        isAudio = true;
        audioUrl = getUrlPath(audio);
        break;
      case "video":
        isVideo = true;
        videoUrl = getUrlPath(video);
        break;
      case "iframe":
        setIframeMedia(iframe);
        break;
      default:
        media2 = someProp(payload, mediaProps) || mediaFallback;
        break;
    }
    const imageUrl = getUrlPath(media2);
    const {
      color,
      background_color: backgroundColor
    } = media2;
    updateState({
      url: url2,
      color,
      title,
      description,
      imageUrl,
      videoUrl,
      audioUrl,
      isVideo,
      isAudio,
      backgroundColor
    });
    setLoading(false);
  }, [updateState, mediaProps, setData]);
  const toFetchData = (0, import_react2.useCallback)(() => {
    if (canFetchData) {
      setLoading(true);
      const fetch = fetchData ? $2(apiUrl, apiUrlProps) : Promise.resolve({});
      fetch.then((_ref) => {
        let {
          data
        } = _ref;
        return mergeData(data);
      }).catch((error) => {
        setLoading(false);
        setIsError(true);
        console.error(`
┌───────────────┐
│ Microlink SDK │
└───────────────┘

${error.description}

${JSON.stringify(error.data)}

id   ${error.headers["x-request-id"]}
uri  ${error.url}
code ${error.code} (${error.statusCode})

microlink.io/${error.code.toLowerCase()}
`);
      });
    }
  }, [apiUrlProps, fetchData, apiUrl, mergeData, canFetchData]);
  (0, import_react2.useEffect)(toFetchData, [url, setData, hasIntersected]);
  const isLoading = isLoadingUndefined ? loadingState : loading;
  if (isError) {
    return import_react2.default.createElement("a", _extends({
      href: url
    }, restProps), url);
  }
  if (iframeMedia) {
    if (!isSSR) {
      iframeMedia.scripts.forEach((attrs) => {
        const hasScript = document.querySelector(`script[src="${attrs.src}"]`);
        if (!hasScript) {
          const script = document.createElement("script");
          Object.keys(attrs).forEach((key) => script[key] = attrs[key]);
          document.body.appendChild(script);
        }
      });
    }
    return import_react2.default.createElement("div", _extends({
      className: classNames.iframe,
      dangerouslySetInnerHTML: {
        __html: iframeMedia.html
      }
    }, restProps));
  }
  return import_react2.default.createElement(CardWrap, _extends({
    className: `${classNames.main} ${className}`.trim(),
    href: url,
    $isLoading: isLoading,
    ref: cardRef
  }, restProps), isLoading ? _CardEmpty || (_CardEmpty = import_react2.default.createElement(CardEmptyState, null)) : import_react2.default.createElement(import_react2.default.Fragment, null, _CardMedia || (_CardMedia = import_react2.default.createElement(CardMedia, null)), _CardContent || (_CardContent = import_react2.default.createElement(CardContent, null))));
};
var Microlink = (props) => import_react2.default.createElement(GlobalState, props, (otherProps) => import_react2.default.createElement(Card, otherProps));
Microlink.defaultProps = {
  className: "",
  apiKey: void 0,
  autoPlay: true,
  controls: true,
  direction: "ltr",
  lazy: true,
  loop: true,
  media: ["iframe", "video", "audio", "image", "logo"],
  fetchData: true,
  muted: true,
  playsInline: true,
  size: "normal"
};
export {
  Microlink as default,
  $2 as fetchFromApi,
  getApiUrl,
  imageProxy
};
//# sourceMappingURL=@microlink_react.js.map
